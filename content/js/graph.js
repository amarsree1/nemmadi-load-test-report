/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 136.0, "minX": 0.0, "maxY": 70939.0, "series": [{"data": [[0.0, 780.0], [0.1, 780.0], [0.2, 780.0], [0.3, 780.0], [0.4, 780.0], [0.5, 780.0], [0.6, 780.0], [0.7, 780.0], [0.8, 780.0], [0.9, 780.0], [1.0, 780.0], [1.1, 780.0], [1.2, 780.0], [1.3, 794.0], [1.4, 794.0], [1.5, 794.0], [1.6, 794.0], [1.7, 794.0], [1.8, 794.0], [1.9, 794.0], [2.0, 794.0], [2.1, 794.0], [2.2, 794.0], [2.3, 794.0], [2.4, 794.0], [2.5, 814.0], [2.6, 814.0], [2.7, 814.0], [2.8, 814.0], [2.9, 814.0], [3.0, 814.0], [3.1, 814.0], [3.2, 814.0], [3.3, 814.0], [3.4, 814.0], [3.5, 814.0], [3.6, 814.0], [3.7, 814.0], [3.8, 828.0], [3.9, 828.0], [4.0, 828.0], [4.1, 828.0], [4.2, 828.0], [4.3, 828.0], [4.4, 828.0], [4.5, 828.0], [4.6, 828.0], [4.7, 828.0], [4.8, 828.0], [4.9, 828.0], [5.0, 834.0], [5.1, 834.0], [5.2, 834.0], [5.3, 834.0], [5.4, 834.0], [5.5, 834.0], [5.6, 834.0], [5.7, 834.0], [5.8, 834.0], [5.9, 834.0], [6.0, 834.0], [6.1, 834.0], [6.2, 834.0], [6.3, 897.0], [6.4, 897.0], [6.5, 897.0], [6.6, 897.0], [6.7, 897.0], [6.8, 897.0], [6.9, 897.0], [7.0, 897.0], [7.1, 897.0], [7.2, 897.0], [7.3, 897.0], [7.4, 897.0], [7.5, 898.0], [7.6, 898.0], [7.7, 898.0], [7.8, 898.0], [7.9, 898.0], [8.0, 898.0], [8.1, 898.0], [8.2, 898.0], [8.3, 898.0], [8.4, 898.0], [8.5, 898.0], [8.6, 898.0], [8.7, 898.0], [8.8, 901.0], [8.9, 901.0], [9.0, 901.0], [9.1, 901.0], [9.2, 901.0], [9.3, 901.0], [9.4, 901.0], [9.5, 901.0], [9.6, 901.0], [9.7, 901.0], [9.8, 901.0], [9.9, 901.0], [10.0, 902.0], [10.1, 902.0], [10.2, 902.0], [10.3, 902.0], [10.4, 902.0], [10.5, 902.0], [10.6, 902.0], [10.7, 902.0], [10.8, 902.0], [10.9, 902.0], [11.0, 902.0], [11.1, 902.0], [11.2, 902.0], [11.3, 904.0], [11.4, 904.0], [11.5, 904.0], [11.6, 904.0], [11.7, 904.0], [11.8, 904.0], [11.9, 904.0], [12.0, 904.0], [12.1, 904.0], [12.2, 904.0], [12.3, 904.0], [12.4, 904.0], [12.5, 904.0], [12.6, 904.0], [12.7, 904.0], [12.8, 904.0], [12.9, 904.0], [13.0, 904.0], [13.1, 904.0], [13.2, 904.0], [13.3, 904.0], [13.4, 904.0], [13.5, 904.0], [13.6, 904.0], [13.7, 904.0], [13.8, 906.0], [13.9, 906.0], [14.0, 906.0], [14.1, 906.0], [14.2, 906.0], [14.3, 906.0], [14.4, 906.0], [14.5, 906.0], [14.6, 906.0], [14.7, 906.0], [14.8, 906.0], [14.9, 906.0], [15.0, 908.0], [15.1, 908.0], [15.2, 908.0], [15.3, 908.0], [15.4, 908.0], [15.5, 908.0], [15.6, 908.0], [15.7, 908.0], [15.8, 908.0], [15.9, 908.0], [16.0, 908.0], [16.1, 908.0], [16.2, 908.0], [16.3, 908.0], [16.4, 908.0], [16.5, 908.0], [16.6, 908.0], [16.7, 908.0], [16.8, 908.0], [16.9, 908.0], [17.0, 908.0], [17.1, 908.0], [17.2, 908.0], [17.3, 908.0], [17.4, 908.0], [17.5, 910.0], [17.6, 910.0], [17.7, 910.0], [17.8, 910.0], [17.9, 910.0], [18.0, 910.0], [18.1, 910.0], [18.2, 910.0], [18.3, 910.0], [18.4, 910.0], [18.5, 910.0], [18.6, 910.0], [18.7, 910.0], [18.8, 912.0], [18.9, 912.0], [19.0, 912.0], [19.1, 912.0], [19.2, 912.0], [19.3, 912.0], [19.4, 912.0], [19.5, 912.0], [19.6, 912.0], [19.7, 912.0], [19.8, 912.0], [19.9, 912.0], [20.0, 920.0], [20.1, 920.0], [20.2, 920.0], [20.3, 920.0], [20.4, 920.0], [20.5, 920.0], [20.6, 920.0], [20.7, 920.0], [20.8, 920.0], [20.9, 920.0], [21.0, 920.0], [21.1, 920.0], [21.2, 920.0], [21.3, 920.0], [21.4, 920.0], [21.5, 920.0], [21.6, 920.0], [21.7, 920.0], [21.8, 920.0], [21.9, 920.0], [22.0, 920.0], [22.1, 920.0], [22.2, 920.0], [22.3, 920.0], [22.4, 920.0], [22.5, 925.0], [22.6, 925.0], [22.7, 925.0], [22.8, 925.0], [22.9, 925.0], [23.0, 925.0], [23.1, 925.0], [23.2, 925.0], [23.3, 925.0], [23.4, 925.0], [23.5, 925.0], [23.6, 925.0], [23.7, 925.0], [23.8, 928.0], [23.9, 928.0], [24.0, 928.0], [24.1, 928.0], [24.2, 928.0], [24.3, 928.0], [24.4, 928.0], [24.5, 928.0], [24.6, 928.0], [24.7, 928.0], [24.8, 928.0], [24.9, 928.0], [25.0, 928.0], [25.1, 928.0], [25.2, 928.0], [25.3, 928.0], [25.4, 928.0], [25.5, 928.0], [25.6, 928.0], [25.7, 928.0], [25.8, 928.0], [25.9, 928.0], [26.0, 928.0], [26.1, 928.0], [26.2, 928.0], [26.3, 934.0], [26.4, 934.0], [26.5, 934.0], [26.6, 934.0], [26.7, 934.0], [26.8, 934.0], [26.9, 934.0], [27.0, 934.0], [27.1, 934.0], [27.2, 934.0], [27.3, 934.0], [27.4, 934.0], [27.5, 936.0], [27.6, 936.0], [27.7, 936.0], [27.8, 936.0], [27.9, 936.0], [28.0, 936.0], [28.1, 936.0], [28.2, 936.0], [28.3, 936.0], [28.4, 936.0], [28.5, 936.0], [28.6, 936.0], [28.7, 936.0], [28.8, 954.0], [28.9, 954.0], [29.0, 954.0], [29.1, 954.0], [29.2, 954.0], [29.3, 954.0], [29.4, 954.0], [29.5, 954.0], [29.6, 954.0], [29.7, 954.0], [29.8, 954.0], [29.9, 954.0], [30.0, 957.0], [30.1, 957.0], [30.2, 957.0], [30.3, 957.0], [30.4, 957.0], [30.5, 957.0], [30.6, 957.0], [30.7, 957.0], [30.8, 957.0], [30.9, 957.0], [31.0, 957.0], [31.1, 957.0], [31.2, 957.0], [31.3, 965.0], [31.4, 965.0], [31.5, 965.0], [31.6, 965.0], [31.7, 965.0], [31.8, 965.0], [31.9, 965.0], [32.0, 965.0], [32.1, 965.0], [32.2, 965.0], [32.3, 965.0], [32.4, 965.0], [32.5, 967.0], [32.6, 967.0], [32.7, 967.0], [32.8, 967.0], [32.9, 967.0], [33.0, 967.0], [33.1, 967.0], [33.2, 967.0], [33.3, 967.0], [33.4, 967.0], [33.5, 967.0], [33.6, 967.0], [33.7, 967.0], [33.8, 969.0], [33.9, 969.0], [34.0, 969.0], [34.1, 969.0], [34.2, 969.0], [34.3, 969.0], [34.4, 969.0], [34.5, 969.0], [34.6, 969.0], [34.7, 969.0], [34.8, 969.0], [34.9, 969.0], [35.0, 989.0], [35.1, 989.0], [35.2, 989.0], [35.3, 989.0], [35.4, 989.0], [35.5, 989.0], [35.6, 989.0], [35.7, 989.0], [35.8, 989.0], [35.9, 989.0], [36.0, 989.0], [36.1, 989.0], [36.2, 989.0], [36.3, 1252.0], [36.4, 1252.0], [36.5, 1252.0], [36.6, 1252.0], [36.7, 1252.0], [36.8, 1252.0], [36.9, 1252.0], [37.0, 1252.0], [37.1, 1252.0], [37.2, 1252.0], [37.3, 1252.0], [37.4, 1252.0], [37.5, 1257.0], [37.6, 1257.0], [37.7, 1257.0], [37.8, 1257.0], [37.9, 1257.0], [38.0, 1257.0], [38.1, 1257.0], [38.2, 1257.0], [38.3, 1257.0], [38.4, 1257.0], [38.5, 1257.0], [38.6, 1257.0], [38.7, 1257.0], [38.8, 1292.0], [38.9, 1292.0], [39.0, 1292.0], [39.1, 1292.0], [39.2, 1292.0], [39.3, 1292.0], [39.4, 1292.0], [39.5, 1292.0], [39.6, 1292.0], [39.7, 1292.0], [39.8, 1292.0], [39.9, 1292.0], [40.0, 1302.0], [40.1, 1302.0], [40.2, 1302.0], [40.3, 1302.0], [40.4, 1302.0], [40.5, 1302.0], [40.6, 1302.0], [40.7, 1302.0], [40.8, 1302.0], [40.9, 1302.0], [41.0, 1302.0], [41.1, 1302.0], [41.2, 1302.0], [41.3, 1308.0], [41.4, 1308.0], [41.5, 1308.0], [41.6, 1308.0], [41.7, 1308.0], [41.8, 1308.0], [41.9, 1308.0], [42.0, 1308.0], [42.1, 1308.0], [42.2, 1308.0], [42.3, 1308.0], [42.4, 1308.0], [42.5, 1312.0], [42.6, 1312.0], [42.7, 1312.0], [42.8, 1312.0], [42.9, 1312.0], [43.0, 1312.0], [43.1, 1312.0], [43.2, 1312.0], [43.3, 1312.0], [43.4, 1312.0], [43.5, 1312.0], [43.6, 1312.0], [43.7, 1312.0], [43.8, 1313.0], [43.9, 1313.0], [44.0, 1313.0], [44.1, 1313.0], [44.2, 1313.0], [44.3, 1313.0], [44.4, 1313.0], [44.5, 1313.0], [44.6, 1313.0], [44.7, 1313.0], [44.8, 1313.0], [44.9, 1313.0], [45.0, 1328.0], [45.1, 1328.0], [45.2, 1328.0], [45.3, 1328.0], [45.4, 1328.0], [45.5, 1328.0], [45.6, 1328.0], [45.7, 1328.0], [45.8, 1328.0], [45.9, 1328.0], [46.0, 1328.0], [46.1, 1328.0], [46.2, 1328.0], [46.3, 1343.0], [46.4, 1343.0], [46.5, 1343.0], [46.6, 1343.0], [46.7, 1343.0], [46.8, 1343.0], [46.9, 1343.0], [47.0, 1343.0], [47.1, 1343.0], [47.2, 1343.0], [47.3, 1343.0], [47.4, 1343.0], [47.5, 1347.0], [47.6, 1347.0], [47.7, 1347.0], [47.8, 1347.0], [47.9, 1347.0], [48.0, 1347.0], [48.1, 1347.0], [48.2, 1347.0], [48.3, 1347.0], [48.4, 1347.0], [48.5, 1347.0], [48.6, 1347.0], [48.7, 1347.0], [48.8, 1348.0], [48.9, 1348.0], [49.0, 1348.0], [49.1, 1348.0], [49.2, 1348.0], [49.3, 1348.0], [49.4, 1348.0], [49.5, 1348.0], [49.6, 1348.0], [49.7, 1348.0], [49.8, 1348.0], [49.9, 1348.0], [50.0, 1348.0], [50.1, 1348.0], [50.2, 1348.0], [50.3, 1348.0], [50.4, 1348.0], [50.5, 1348.0], [50.6, 1348.0], [50.7, 1348.0], [50.8, 1348.0], [50.9, 1348.0], [51.0, 1348.0], [51.1, 1348.0], [51.2, 1348.0], [51.3, 1375.0], [51.4, 1375.0], [51.5, 1375.0], [51.6, 1375.0], [51.7, 1375.0], [51.8, 1375.0], [51.9, 1375.0], [52.0, 1375.0], [52.1, 1375.0], [52.2, 1375.0], [52.3, 1375.0], [52.4, 1375.0], [52.5, 1378.0], [52.6, 1378.0], [52.7, 1378.0], [52.8, 1378.0], [52.9, 1378.0], [53.0, 1378.0], [53.1, 1378.0], [53.2, 1378.0], [53.3, 1378.0], [53.4, 1378.0], [53.5, 1378.0], [53.6, 1378.0], [53.7, 1378.0], [53.8, 1381.0], [53.9, 1381.0], [54.0, 1381.0], [54.1, 1381.0], [54.2, 1381.0], [54.3, 1381.0], [54.4, 1381.0], [54.5, 1381.0], [54.6, 1381.0], [54.7, 1381.0], [54.8, 1381.0], [54.9, 1381.0], [55.0, 1389.0], [55.1, 1389.0], [55.2, 1389.0], [55.3, 1389.0], [55.4, 1389.0], [55.5, 1389.0], [55.6, 1389.0], [55.7, 1389.0], [55.8, 1389.0], [55.9, 1389.0], [56.0, 1389.0], [56.1, 1389.0], [56.2, 1389.0], [56.3, 1390.0], [56.4, 1390.0], [56.5, 1390.0], [56.6, 1390.0], [56.7, 1390.0], [56.8, 1390.0], [56.9, 1390.0], [57.0, 1390.0], [57.1, 1390.0], [57.2, 1390.0], [57.3, 1390.0], [57.4, 1390.0], [57.5, 1391.0], [57.6, 1391.0], [57.7, 1391.0], [57.8, 1391.0], [57.9, 1391.0], [58.0, 1391.0], [58.1, 1391.0], [58.2, 1391.0], [58.3, 1391.0], [58.4, 1391.0], [58.5, 1391.0], [58.6, 1391.0], [58.7, 1391.0], [58.8, 1392.0], [58.9, 1392.0], [59.0, 1392.0], [59.1, 1392.0], [59.2, 1392.0], [59.3, 1392.0], [59.4, 1392.0], [59.5, 1392.0], [59.6, 1392.0], [59.7, 1392.0], [59.8, 1392.0], [59.9, 1392.0], [60.0, 1395.0], [60.1, 1395.0], [60.2, 1395.0], [60.3, 1395.0], [60.4, 1395.0], [60.5, 1395.0], [60.6, 1395.0], [60.7, 1395.0], [60.8, 1395.0], [60.9, 1395.0], [61.0, 1395.0], [61.1, 1395.0], [61.2, 1395.0], [61.3, 1428.0], [61.4, 1428.0], [61.5, 1428.0], [61.6, 1428.0], [61.7, 1428.0], [61.8, 1428.0], [61.9, 1428.0], [62.0, 1428.0], [62.1, 1428.0], [62.2, 1428.0], [62.3, 1428.0], [62.4, 1428.0], [62.5, 1436.0], [62.6, 1436.0], [62.7, 1436.0], [62.8, 1436.0], [62.9, 1436.0], [63.0, 1436.0], [63.1, 1436.0], [63.2, 1436.0], [63.3, 1436.0], [63.4, 1436.0], [63.5, 1436.0], [63.6, 1436.0], [63.7, 1436.0], [63.8, 1437.0], [63.9, 1437.0], [64.0, 1437.0], [64.1, 1437.0], [64.2, 1437.0], [64.3, 1437.0], [64.4, 1437.0], [64.5, 1437.0], [64.6, 1437.0], [64.7, 1437.0], [64.8, 1437.0], [64.9, 1437.0], [65.0, 1445.0], [65.1, 1445.0], [65.2, 1445.0], [65.3, 1445.0], [65.4, 1445.0], [65.5, 1445.0], [65.6, 1445.0], [65.7, 1445.0], [65.8, 1445.0], [65.9, 1445.0], [66.0, 1445.0], [66.1, 1445.0], [66.2, 1445.0], [66.3, 1448.0], [66.4, 1448.0], [66.5, 1448.0], [66.6, 1448.0], [66.7, 1448.0], [66.8, 1448.0], [66.9, 1448.0], [67.0, 1448.0], [67.1, 1448.0], [67.2, 1448.0], [67.3, 1448.0], [67.4, 1448.0], [67.5, 1451.0], [67.6, 1451.0], [67.7, 1451.0], [67.8, 1451.0], [67.9, 1451.0], [68.0, 1451.0], [68.1, 1451.0], [68.2, 1451.0], [68.3, 1451.0], [68.4, 1451.0], [68.5, 1451.0], [68.6, 1451.0], [68.7, 1451.0], [68.8, 1451.0], [68.9, 1451.0], [69.0, 1451.0], [69.1, 1451.0], [69.2, 1451.0], [69.3, 1451.0], [69.4, 1451.0], [69.5, 1451.0], [69.6, 1451.0], [69.7, 1451.0], [69.8, 1451.0], [69.9, 1451.0], [70.0, 1469.0], [70.1, 1469.0], [70.2, 1469.0], [70.3, 1469.0], [70.4, 1469.0], [70.5, 1469.0], [70.6, 1469.0], [70.7, 1469.0], [70.8, 1469.0], [70.9, 1469.0], [71.0, 1469.0], [71.1, 1469.0], [71.2, 1469.0], [71.3, 1470.0], [71.4, 1470.0], [71.5, 1470.0], [71.6, 1470.0], [71.7, 1470.0], [71.8, 1470.0], [71.9, 1470.0], [72.0, 1470.0], [72.1, 1470.0], [72.2, 1470.0], [72.3, 1470.0], [72.4, 1470.0], [72.5, 1481.0], [72.6, 1481.0], [72.7, 1481.0], [72.8, 1481.0], [72.9, 1481.0], [73.0, 1481.0], [73.1, 1481.0], [73.2, 1481.0], [73.3, 1481.0], [73.4, 1481.0], [73.5, 1481.0], [73.6, 1481.0], [73.7, 1481.0], [73.8, 1488.0], [73.9, 1488.0], [74.0, 1488.0], [74.1, 1488.0], [74.2, 1488.0], [74.3, 1488.0], [74.4, 1488.0], [74.5, 1488.0], [74.6, 1488.0], [74.7, 1488.0], [74.8, 1488.0], [74.9, 1488.0], [75.0, 1490.0], [75.1, 1490.0], [75.2, 1490.0], [75.3, 1490.0], [75.4, 1490.0], [75.5, 1490.0], [75.6, 1490.0], [75.7, 1490.0], [75.8, 1490.0], [75.9, 1490.0], [76.0, 1490.0], [76.1, 1490.0], [76.2, 1490.0], [76.3, 1494.0], [76.4, 1494.0], [76.5, 1494.0], [76.6, 1494.0], [76.7, 1494.0], [76.8, 1494.0], [76.9, 1494.0], [77.0, 1494.0], [77.1, 1494.0], [77.2, 1494.0], [77.3, 1494.0], [77.4, 1494.0], [77.5, 1508.0], [77.6, 1508.0], [77.7, 1508.0], [77.8, 1508.0], [77.9, 1508.0], [78.0, 1508.0], [78.1, 1508.0], [78.2, 1508.0], [78.3, 1508.0], [78.4, 1508.0], [78.5, 1508.0], [78.6, 1508.0], [78.7, 1508.0], [78.8, 1513.0], [78.9, 1513.0], [79.0, 1513.0], [79.1, 1513.0], [79.2, 1513.0], [79.3, 1513.0], [79.4, 1513.0], [79.5, 1513.0], [79.6, 1513.0], [79.7, 1513.0], [79.8, 1513.0], [79.9, 1513.0], [80.0, 1530.0], [80.1, 1530.0], [80.2, 1530.0], [80.3, 1530.0], [80.4, 1530.0], [80.5, 1530.0], [80.6, 1530.0], [80.7, 1530.0], [80.8, 1530.0], [80.9, 1530.0], [81.0, 1530.0], [81.1, 1530.0], [81.2, 1530.0], [81.3, 1542.0], [81.4, 1542.0], [81.5, 1542.0], [81.6, 1542.0], [81.7, 1542.0], [81.8, 1542.0], [81.9, 1542.0], [82.0, 1542.0], [82.1, 1542.0], [82.2, 1542.0], [82.3, 1542.0], [82.4, 1542.0], [82.5, 1544.0], [82.6, 1544.0], [82.7, 1544.0], [82.8, 1544.0], [82.9, 1544.0], [83.0, 1544.0], [83.1, 1544.0], [83.2, 1544.0], [83.3, 1544.0], [83.4, 1544.0], [83.5, 1544.0], [83.6, 1544.0], [83.7, 1544.0], [83.8, 1556.0], [83.9, 1556.0], [84.0, 1556.0], [84.1, 1556.0], [84.2, 1556.0], [84.3, 1556.0], [84.4, 1556.0], [84.5, 1556.0], [84.6, 1556.0], [84.7, 1556.0], [84.8, 1556.0], [84.9, 1556.0], [85.0, 1556.0], [85.1, 1556.0], [85.2, 1556.0], [85.3, 1556.0], [85.4, 1556.0], [85.5, 1556.0], [85.6, 1556.0], [85.7, 1556.0], [85.8, 1556.0], [85.9, 1556.0], [86.0, 1556.0], [86.1, 1556.0], [86.2, 1556.0], [86.3, 1608.0], [86.4, 1608.0], [86.5, 1608.0], [86.6, 1608.0], [86.7, 1608.0], [86.8, 1608.0], [86.9, 1608.0], [87.0, 1608.0], [87.1, 1608.0], [87.2, 1608.0], [87.3, 1608.0], [87.4, 1608.0], [87.5, 1663.0], [87.6, 1663.0], [87.7, 1663.0], [87.8, 1663.0], [87.9, 1663.0], [88.0, 1663.0], [88.1, 1663.0], [88.2, 1663.0], [88.3, 1663.0], [88.4, 1663.0], [88.5, 1663.0], [88.6, 1663.0], [88.7, 1663.0], [88.8, 1664.0], [88.9, 1664.0], [89.0, 1664.0], [89.1, 1664.0], [89.2, 1664.0], [89.3, 1664.0], [89.4, 1664.0], [89.5, 1664.0], [89.6, 1664.0], [89.7, 1664.0], [89.8, 1664.0], [89.9, 1664.0], [90.0, 1683.0], [90.1, 1683.0], [90.2, 1683.0], [90.3, 1683.0], [90.4, 1683.0], [90.5, 1683.0], [90.6, 1683.0], [90.7, 1683.0], [90.8, 1683.0], [90.9, 1683.0], [91.0, 1683.0], [91.1, 1683.0], [91.2, 1683.0], [91.3, 1687.0], [91.4, 1687.0], [91.5, 1687.0], [91.6, 1687.0], [91.7, 1687.0], [91.8, 1687.0], [91.9, 1687.0], [92.0, 1687.0], [92.1, 1687.0], [92.2, 1687.0], [92.3, 1687.0], [92.4, 1687.0], [92.5, 1715.0], [92.6, 1715.0], [92.7, 1715.0], [92.8, 1715.0], [92.9, 1715.0], [93.0, 1715.0], [93.1, 1715.0], [93.2, 1715.0], [93.3, 1715.0], [93.4, 1715.0], [93.5, 1715.0], [93.6, 1715.0], [93.7, 1715.0], [93.8, 1724.0], [93.9, 1724.0], [94.0, 1724.0], [94.1, 1724.0], [94.2, 1724.0], [94.3, 1724.0], [94.4, 1724.0], [94.5, 1724.0], [94.6, 1724.0], [94.7, 1724.0], [94.8, 1724.0], [94.9, 1724.0], [95.0, 1786.0], [95.1, 1786.0], [95.2, 1786.0], [95.3, 1786.0], [95.4, 1786.0], [95.5, 1786.0], [95.6, 1786.0], [95.7, 1786.0], [95.8, 1786.0], [95.9, 1786.0], [96.0, 1786.0], [96.1, 1786.0], [96.2, 1786.0], [96.3, 1788.0], [96.4, 1788.0], [96.5, 1788.0], [96.6, 1788.0], [96.7, 1788.0], [96.8, 1788.0], [96.9, 1788.0], [97.0, 1788.0], [97.1, 1788.0], [97.2, 1788.0], [97.3, 1788.0], [97.4, 1788.0], [97.5, 2069.0], [97.6, 2069.0], [97.7, 2069.0], [97.8, 2069.0], [97.9, 2069.0], [98.0, 2069.0], [98.1, 2069.0], [98.2, 2069.0], [98.3, 2069.0], [98.4, 2069.0], [98.5, 2069.0], [98.6, 2069.0], [98.7, 2069.0], [98.8, 2375.0], [98.9, 2375.0], [99.0, 2375.0], [99.1, 2375.0], [99.2, 2375.0], [99.3, 2375.0], [99.4, 2375.0], [99.5, 2375.0], [99.6, 2375.0], [99.7, 2375.0], [99.8, 2375.0], [99.9, 2375.0]], "isOverall": false, "label": "https://nims-mobile.nemmadi.in/dashboard", "isController": false}, {"data": [[0.0, 40228.0], [0.1, 40228.0], [0.2, 40228.0], [0.3, 40228.0], [0.4, 40228.0], [0.5, 40228.0], [0.6, 40228.0], [0.7, 40228.0], [0.8, 40318.0], [0.9, 40318.0], [1.0, 40318.0], [1.1, 40318.0], [1.2, 40318.0], [1.3, 40318.0], [1.4, 40318.0], [1.5, 40826.0], [1.6, 40826.0], [1.7, 40826.0], [1.8, 40826.0], [1.9, 40826.0], [2.0, 40826.0], [2.1, 40826.0], [2.2, 40869.0], [2.3, 40869.0], [2.4, 40869.0], [2.5, 40869.0], [2.6, 40869.0], [2.7, 40869.0], [2.8, 40869.0], [2.9, 41312.0], [3.0, 41312.0], [3.1, 41312.0], [3.2, 41312.0], [3.3, 41312.0], [3.4, 41312.0], [3.5, 41312.0], [3.6, 41667.0], [3.7, 41667.0], [3.8, 41667.0], [3.9, 41667.0], [4.0, 41667.0], [4.1, 41667.0], [4.2, 41667.0], [4.3, 41851.0], [4.4, 41851.0], [4.5, 41851.0], [4.6, 41851.0], [4.7, 41851.0], [4.8, 41851.0], [4.9, 41851.0], [5.0, 41896.0], [5.1, 41896.0], [5.2, 41896.0], [5.3, 41896.0], [5.4, 41896.0], [5.5, 41896.0], [5.6, 41896.0], [5.7, 41896.0], [5.8, 41946.0], [5.9, 41946.0], [6.0, 41946.0], [6.1, 41946.0], [6.2, 41946.0], [6.3, 41946.0], [6.4, 41946.0], [6.5, 42523.0], [6.6, 42523.0], [6.7, 42523.0], [6.8, 42523.0], [6.9, 42523.0], [7.0, 42523.0], [7.1, 42523.0], [7.2, 42604.0], [7.3, 42604.0], [7.4, 42604.0], [7.5, 42604.0], [7.6, 42604.0], [7.7, 42604.0], [7.8, 42604.0], [7.9, 42699.0], [8.0, 42699.0], [8.1, 42699.0], [8.2, 42699.0], [8.3, 42699.0], [8.4, 42699.0], [8.5, 42699.0], [8.6, 42841.0], [8.7, 42841.0], [8.8, 42841.0], [8.9, 42841.0], [9.0, 42841.0], [9.1, 42841.0], [9.2, 42841.0], [9.3, 42943.0], [9.4, 42943.0], [9.5, 42943.0], [9.6, 42943.0], [9.7, 42943.0], [9.8, 42943.0], [9.9, 42943.0], [10.0, 42956.0], [10.1, 42956.0], [10.2, 42956.0], [10.3, 42956.0], [10.4, 42956.0], [10.5, 42956.0], [10.6, 42956.0], [10.7, 42956.0], [10.8, 43026.0], [10.9, 43026.0], [11.0, 43026.0], [11.1, 43026.0], [11.2, 43026.0], [11.3, 43026.0], [11.4, 43026.0], [11.5, 43030.0], [11.6, 43030.0], [11.7, 43030.0], [11.8, 43030.0], [11.9, 43030.0], [12.0, 43030.0], [12.1, 43030.0], [12.2, 43054.0], [12.3, 43054.0], [12.4, 43054.0], [12.5, 43054.0], [12.6, 43054.0], [12.7, 43054.0], [12.8, 43054.0], [12.9, 43124.0], [13.0, 43124.0], [13.1, 43124.0], [13.2, 43124.0], [13.3, 43124.0], [13.4, 43124.0], [13.5, 43124.0], [13.6, 43469.0], [13.7, 43469.0], [13.8, 43469.0], [13.9, 43469.0], [14.0, 43469.0], [14.1, 43469.0], [14.2, 43469.0], [14.3, 43486.0], [14.4, 43486.0], [14.5, 43486.0], [14.6, 43486.0], [14.7, 43486.0], [14.8, 43486.0], [14.9, 43486.0], [15.0, 43515.0], [15.1, 43515.0], [15.2, 43515.0], [15.3, 43515.0], [15.4, 43515.0], [15.5, 43515.0], [15.6, 43515.0], [15.7, 43515.0], [15.8, 43523.0], [15.9, 43523.0], [16.0, 43523.0], [16.1, 43523.0], [16.2, 43523.0], [16.3, 43523.0], [16.4, 43523.0], [16.5, 43529.0], [16.6, 43529.0], [16.7, 43529.0], [16.8, 43529.0], [16.9, 43529.0], [17.0, 43529.0], [17.1, 43529.0], [17.2, 43569.0], [17.3, 43569.0], [17.4, 43569.0], [17.5, 43569.0], [17.6, 43569.0], [17.7, 43569.0], [17.8, 43569.0], [17.9, 43629.0], [18.0, 43629.0], [18.1, 43629.0], [18.2, 43629.0], [18.3, 43629.0], [18.4, 43629.0], [18.5, 43629.0], [18.6, 43652.0], [18.7, 43652.0], [18.8, 43652.0], [18.9, 43652.0], [19.0, 43652.0], [19.1, 43652.0], [19.2, 43652.0], [19.3, 43689.0], [19.4, 43689.0], [19.5, 43689.0], [19.6, 43689.0], [19.7, 43689.0], [19.8, 43689.0], [19.9, 43689.0], [20.0, 43726.0], [20.1, 43726.0], [20.2, 43726.0], [20.3, 43726.0], [20.4, 43726.0], [20.5, 43726.0], [20.6, 43726.0], [20.7, 43726.0], [20.8, 43745.0], [20.9, 43745.0], [21.0, 43745.0], [21.1, 43745.0], [21.2, 43745.0], [21.3, 43745.0], [21.4, 43745.0], [21.5, 43827.0], [21.6, 43827.0], [21.7, 43827.0], [21.8, 43827.0], [21.9, 43827.0], [22.0, 43827.0], [22.1, 43827.0], [22.2, 43849.0], [22.3, 43849.0], [22.4, 43849.0], [22.5, 43849.0], [22.6, 43849.0], [22.7, 43849.0], [22.8, 43849.0], [22.9, 43872.0], [23.0, 43872.0], [23.1, 43872.0], [23.2, 43872.0], [23.3, 43872.0], [23.4, 43872.0], [23.5, 43872.0], [23.6, 43948.0], [23.7, 43948.0], [23.8, 43948.0], [23.9, 43948.0], [24.0, 43948.0], [24.1, 43948.0], [24.2, 43948.0], [24.3, 44062.0], [24.4, 44062.0], [24.5, 44062.0], [24.6, 44062.0], [24.7, 44062.0], [24.8, 44062.0], [24.9, 44062.0], [25.0, 44062.0], [25.1, 44290.0], [25.2, 44290.0], [25.3, 44290.0], [25.4, 44290.0], [25.5, 44290.0], [25.6, 44290.0], [25.7, 44290.0], [25.8, 44440.0], [25.9, 44440.0], [26.0, 44440.0], [26.1, 44440.0], [26.2, 44440.0], [26.3, 44440.0], [26.4, 44440.0], [26.5, 44665.0], [26.6, 44665.0], [26.7, 44665.0], [26.8, 44665.0], [26.9, 44665.0], [27.0, 44665.0], [27.1, 44665.0], [27.2, 44761.0], [27.3, 44761.0], [27.4, 44761.0], [27.5, 44761.0], [27.6, 44761.0], [27.7, 44761.0], [27.8, 44761.0], [27.9, 44942.0], [28.0, 44942.0], [28.1, 44942.0], [28.2, 44942.0], [28.3, 44942.0], [28.4, 44942.0], [28.5, 44942.0], [28.6, 44974.0], [28.7, 44974.0], [28.8, 44974.0], [28.9, 44974.0], [29.0, 44974.0], [29.1, 44974.0], [29.2, 44974.0], [29.3, 45316.0], [29.4, 45316.0], [29.5, 45316.0], [29.6, 45316.0], [29.7, 45316.0], [29.8, 45316.0], [29.9, 45316.0], [30.0, 45316.0], [30.1, 45643.0], [30.2, 45643.0], [30.3, 45643.0], [30.4, 45643.0], [30.5, 45643.0], [30.6, 45643.0], [30.7, 45643.0], [30.8, 45915.0], [30.9, 45915.0], [31.0, 45915.0], [31.1, 45915.0], [31.2, 45915.0], [31.3, 45915.0], [31.4, 45915.0], [31.5, 45934.0], [31.6, 45934.0], [31.7, 45934.0], [31.8, 45934.0], [31.9, 45934.0], [32.0, 45934.0], [32.1, 45934.0], [32.2, 45943.0], [32.3, 45943.0], [32.4, 45943.0], [32.5, 45943.0], [32.6, 45943.0], [32.7, 45943.0], [32.8, 45943.0], [32.9, 46047.0], [33.0, 46047.0], [33.1, 46047.0], [33.2, 46047.0], [33.3, 46047.0], [33.4, 46047.0], [33.5, 46047.0], [33.6, 46490.0], [33.7, 46490.0], [33.8, 46490.0], [33.9, 46490.0], [34.0, 46490.0], [34.1, 46490.0], [34.2, 46490.0], [34.3, 47293.0], [34.4, 47293.0], [34.5, 47293.0], [34.6, 47293.0], [34.7, 47293.0], [34.8, 47293.0], [34.9, 47293.0], [35.0, 47293.0], [35.1, 47878.0], [35.2, 47878.0], [35.3, 47878.0], [35.4, 47878.0], [35.5, 47878.0], [35.6, 47878.0], [35.7, 47878.0], [35.8, 48510.0], [35.9, 48510.0], [36.0, 48510.0], [36.1, 48510.0], [36.2, 48510.0], [36.3, 48510.0], [36.4, 48510.0], [36.5, 49247.0], [36.6, 49247.0], [36.7, 49247.0], [36.8, 49247.0], [36.9, 49247.0], [37.0, 49247.0], [37.1, 49247.0], [37.2, 49279.0], [37.3, 49279.0], [37.4, 49279.0], [37.5, 49279.0], [37.6, 49279.0], [37.7, 49279.0], [37.8, 49279.0], [37.9, 49479.0], [38.0, 49479.0], [38.1, 49479.0], [38.2, 49479.0], [38.3, 49479.0], [38.4, 49479.0], [38.5, 49479.0], [38.6, 49497.0], [38.7, 49497.0], [38.8, 49497.0], [38.9, 49497.0], [39.0, 49497.0], [39.1, 49497.0], [39.2, 49497.0], [39.3, 49612.0], [39.4, 49612.0], [39.5, 49612.0], [39.6, 49612.0], [39.7, 49612.0], [39.8, 49612.0], [39.9, 49612.0], [40.0, 49612.0], [40.1, 49915.0], [40.2, 49915.0], [40.3, 49915.0], [40.4, 49915.0], [40.5, 49915.0], [40.6, 49915.0], [40.7, 49915.0], [40.8, 50186.0], [40.9, 50186.0], [41.0, 50186.0], [41.1, 50186.0], [41.2, 50186.0], [41.3, 50186.0], [41.4, 50186.0], [41.5, 51325.0], [41.6, 51325.0], [41.7, 51325.0], [41.8, 51325.0], [41.9, 51325.0], [42.0, 51325.0], [42.1, 51325.0], [42.2, 51558.0], [42.3, 51558.0], [42.4, 51558.0], [42.5, 51558.0], [42.6, 51558.0], [42.7, 51558.0], [42.8, 51558.0], [42.9, 52004.0], [43.0, 52004.0], [43.1, 52004.0], [43.2, 52004.0], [43.3, 52004.0], [43.4, 52004.0], [43.5, 52004.0], [43.6, 53015.0], [43.7, 53015.0], [43.8, 53015.0], [43.9, 53015.0], [44.0, 53015.0], [44.1, 53015.0], [44.2, 53015.0], [44.3, 53242.0], [44.4, 53242.0], [44.5, 53242.0], [44.6, 53242.0], [44.7, 53242.0], [44.8, 53242.0], [44.9, 53242.0], [45.0, 53242.0], [45.1, 53617.0], [45.2, 53617.0], [45.3, 53617.0], [45.4, 53617.0], [45.5, 53617.0], [45.6, 53617.0], [45.7, 53617.0], [45.8, 53789.0], [45.9, 53789.0], [46.0, 53789.0], [46.1, 53789.0], [46.2, 53789.0], [46.3, 53789.0], [46.4, 53789.0], [46.5, 53991.0], [46.6, 53991.0], [46.7, 53991.0], [46.8, 53991.0], [46.9, 53991.0], [47.0, 53991.0], [47.1, 53991.0], [47.2, 54092.0], [47.3, 54092.0], [47.4, 54092.0], [47.5, 54092.0], [47.6, 54092.0], [47.7, 54092.0], [47.8, 54092.0], [47.9, 54137.0], [48.0, 54137.0], [48.1, 54137.0], [48.2, 54137.0], [48.3, 54137.0], [48.4, 54137.0], [48.5, 54137.0], [48.6, 54165.0], [48.7, 54165.0], [48.8, 54165.0], [48.9, 54165.0], [49.0, 54165.0], [49.1, 54165.0], [49.2, 54165.0], [49.3, 54495.0], [49.4, 54495.0], [49.5, 54495.0], [49.6, 54495.0], [49.7, 54495.0], [49.8, 54495.0], [49.9, 54495.0], [50.0, 54495.0], [50.1, 54515.0], [50.2, 54515.0], [50.3, 54515.0], [50.4, 54515.0], [50.5, 54515.0], [50.6, 54515.0], [50.7, 54515.0], [50.8, 54743.0], [50.9, 54743.0], [51.0, 54743.0], [51.1, 54743.0], [51.2, 54743.0], [51.3, 54743.0], [51.4, 54743.0], [51.5, 54814.0], [51.6, 54814.0], [51.7, 54814.0], [51.8, 54814.0], [51.9, 54814.0], [52.0, 54814.0], [52.1, 54814.0], [52.2, 54821.0], [52.3, 54821.0], [52.4, 54821.0], [52.5, 54821.0], [52.6, 54821.0], [52.7, 54821.0], [52.8, 54821.0], [52.9, 54838.0], [53.0, 54838.0], [53.1, 54838.0], [53.2, 54838.0], [53.3, 54838.0], [53.4, 54838.0], [53.5, 54838.0], [53.6, 55004.0], [53.7, 55004.0], [53.8, 55004.0], [53.9, 55004.0], [54.0, 55004.0], [54.1, 55004.0], [54.2, 55004.0], [54.3, 55211.0], [54.4, 55211.0], [54.5, 55211.0], [54.6, 55211.0], [54.7, 55211.0], [54.8, 55211.0], [54.9, 55211.0], [55.0, 55211.0], [55.1, 55390.0], [55.2, 55390.0], [55.3, 55390.0], [55.4, 55390.0], [55.5, 55390.0], [55.6, 55390.0], [55.7, 55390.0], [55.8, 55423.0], [55.9, 55423.0], [56.0, 55423.0], [56.1, 55423.0], [56.2, 55423.0], [56.3, 55423.0], [56.4, 55423.0], [56.5, 55453.0], [56.6, 55453.0], [56.7, 55453.0], [56.8, 55453.0], [56.9, 55453.0], [57.0, 55453.0], [57.1, 55453.0], [57.2, 55457.0], [57.3, 55457.0], [57.4, 55457.0], [57.5, 55457.0], [57.6, 55457.0], [57.7, 55457.0], [57.8, 55457.0], [57.9, 55591.0], [58.0, 55591.0], [58.1, 55591.0], [58.2, 55591.0], [58.3, 55591.0], [58.4, 55591.0], [58.5, 55591.0], [58.6, 55599.0], [58.7, 55599.0], [58.8, 55599.0], [58.9, 55599.0], [59.0, 55599.0], [59.1, 55599.0], [59.2, 55599.0], [59.3, 55647.0], [59.4, 55647.0], [59.5, 55647.0], [59.6, 55647.0], [59.7, 55647.0], [59.8, 55647.0], [59.9, 55647.0], [60.0, 55647.0], [60.1, 55683.0], [60.2, 55683.0], [60.3, 55683.0], [60.4, 55683.0], [60.5, 55683.0], [60.6, 55683.0], [60.7, 55683.0], [60.8, 55756.0], [60.9, 55756.0], [61.0, 55756.0], [61.1, 55756.0], [61.2, 55756.0], [61.3, 55756.0], [61.4, 55756.0], [61.5, 55758.0], [61.6, 55758.0], [61.7, 55758.0], [61.8, 55758.0], [61.9, 55758.0], [62.0, 55758.0], [62.1, 55758.0], [62.2, 55774.0], [62.3, 55774.0], [62.4, 55774.0], [62.5, 55774.0], [62.6, 55774.0], [62.7, 55774.0], [62.8, 55774.0], [62.9, 55907.0], [63.0, 55907.0], [63.1, 55907.0], [63.2, 55907.0], [63.3, 55907.0], [63.4, 55907.0], [63.5, 55907.0], [63.6, 55916.0], [63.7, 55916.0], [63.8, 55916.0], [63.9, 55916.0], [64.0, 55916.0], [64.1, 55916.0], [64.2, 55916.0], [64.3, 56001.0], [64.4, 56001.0], [64.5, 56001.0], [64.6, 56001.0], [64.7, 56001.0], [64.8, 56001.0], [64.9, 56001.0], [65.0, 56001.0], [65.1, 56042.0], [65.2, 56042.0], [65.3, 56042.0], [65.4, 56042.0], [65.5, 56042.0], [65.6, 56042.0], [65.7, 56042.0], [65.8, 56064.0], [65.9, 56064.0], [66.0, 56064.0], [66.1, 56064.0], [66.2, 56064.0], [66.3, 56064.0], [66.4, 56064.0], [66.5, 56173.0], [66.6, 56173.0], [66.7, 56173.0], [66.8, 56173.0], [66.9, 56173.0], [67.0, 56173.0], [67.1, 56173.0], [67.2, 56404.0], [67.3, 56404.0], [67.4, 56404.0], [67.5, 56404.0], [67.6, 56404.0], [67.7, 56404.0], [67.8, 56404.0], [67.9, 56547.0], [68.0, 56547.0], [68.1, 56547.0], [68.2, 56547.0], [68.3, 56547.0], [68.4, 56547.0], [68.5, 56547.0], [68.6, 56612.0], [68.7, 56612.0], [68.8, 56612.0], [68.9, 56612.0], [69.0, 56612.0], [69.1, 56612.0], [69.2, 56612.0], [69.3, 56645.0], [69.4, 56645.0], [69.5, 56645.0], [69.6, 56645.0], [69.7, 56645.0], [69.8, 56645.0], [69.9, 56645.0], [70.0, 56657.0], [70.1, 56657.0], [70.2, 56657.0], [70.3, 56657.0], [70.4, 56657.0], [70.5, 56657.0], [70.6, 56657.0], [70.7, 56657.0], [70.8, 56693.0], [70.9, 56693.0], [71.0, 56693.0], [71.1, 56693.0], [71.2, 56693.0], [71.3, 56693.0], [71.4, 56693.0], [71.5, 56713.0], [71.6, 56713.0], [71.7, 56713.0], [71.8, 56713.0], [71.9, 56713.0], [72.0, 56713.0], [72.1, 56713.0], [72.2, 56806.0], [72.3, 56806.0], [72.4, 56806.0], [72.5, 56806.0], [72.6, 56806.0], [72.7, 56806.0], [72.8, 56806.0], [72.9, 56813.0], [73.0, 56813.0], [73.1, 56813.0], [73.2, 56813.0], [73.3, 56813.0], [73.4, 56813.0], [73.5, 56813.0], [73.6, 56981.0], [73.7, 56981.0], [73.8, 56981.0], [73.9, 56981.0], [74.0, 56981.0], [74.1, 56981.0], [74.2, 56981.0], [74.3, 57116.0], [74.4, 57116.0], [74.5, 57116.0], [74.6, 57116.0], [74.7, 57116.0], [74.8, 57116.0], [74.9, 57116.0], [75.0, 57277.0], [75.1, 57277.0], [75.2, 57277.0], [75.3, 57277.0], [75.4, 57277.0], [75.5, 57277.0], [75.6, 57277.0], [75.7, 57277.0], [75.8, 57278.0], [75.9, 57278.0], [76.0, 57278.0], [76.1, 57278.0], [76.2, 57278.0], [76.3, 57278.0], [76.4, 57278.0], [76.5, 57511.0], [76.6, 57511.0], [76.7, 57511.0], [76.8, 57511.0], [76.9, 57511.0], [77.0, 57511.0], [77.1, 57511.0], [77.2, 57892.0], [77.3, 57892.0], [77.4, 57892.0], [77.5, 57892.0], [77.6, 57892.0], [77.7, 57892.0], [77.8, 57892.0], [77.9, 58377.0], [78.0, 58377.0], [78.1, 58377.0], [78.2, 58377.0], [78.3, 58377.0], [78.4, 58377.0], [78.5, 58377.0], [78.6, 58495.0], [78.7, 58495.0], [78.8, 58495.0], [78.9, 58495.0], [79.0, 58495.0], [79.1, 58495.0], [79.2, 58495.0], [79.3, 58611.0], [79.4, 58611.0], [79.5, 58611.0], [79.6, 58611.0], [79.7, 58611.0], [79.8, 58611.0], [79.9, 58611.0], [80.0, 58764.0], [80.1, 58764.0], [80.2, 58764.0], [80.3, 58764.0], [80.4, 58764.0], [80.5, 58764.0], [80.6, 58764.0], [80.7, 58764.0], [80.8, 58910.0], [80.9, 58910.0], [81.0, 58910.0], [81.1, 58910.0], [81.2, 58910.0], [81.3, 58910.0], [81.4, 58910.0], [81.5, 59360.0], [81.6, 59360.0], [81.7, 59360.0], [81.8, 59360.0], [81.9, 59360.0], [82.0, 59360.0], [82.1, 59360.0], [82.2, 59903.0], [82.3, 59903.0], [82.4, 59903.0], [82.5, 59903.0], [82.6, 59903.0], [82.7, 59903.0], [82.8, 59903.0], [82.9, 59961.0], [83.0, 59961.0], [83.1, 59961.0], [83.2, 59961.0], [83.3, 59961.0], [83.4, 59961.0], [83.5, 59961.0], [83.6, 60156.0], [83.7, 60156.0], [83.8, 60156.0], [83.9, 60156.0], [84.0, 60156.0], [84.1, 60156.0], [84.2, 60156.0], [84.3, 60286.0], [84.4, 60286.0], [84.5, 60286.0], [84.6, 60286.0], [84.7, 60286.0], [84.8, 60286.0], [84.9, 60286.0], [85.0, 60686.0], [85.1, 60686.0], [85.2, 60686.0], [85.3, 60686.0], [85.4, 60686.0], [85.5, 60686.0], [85.6, 60686.0], [85.7, 60686.0], [85.8, 61957.0], [85.9, 61957.0], [86.0, 61957.0], [86.1, 61957.0], [86.2, 61957.0], [86.3, 61957.0], [86.4, 61957.0], [86.5, 62936.0], [86.6, 62936.0], [86.7, 62936.0], [86.8, 62936.0], [86.9, 62936.0], [87.0, 62936.0], [87.1, 62936.0], [87.2, 62957.0], [87.3, 62957.0], [87.4, 62957.0], [87.5, 62957.0], [87.6, 62957.0], [87.7, 62957.0], [87.8, 62957.0], [87.9, 63125.0], [88.0, 63125.0], [88.1, 63125.0], [88.2, 63125.0], [88.3, 63125.0], [88.4, 63125.0], [88.5, 63125.0], [88.6, 63164.0], [88.7, 63164.0], [88.8, 63164.0], [88.9, 63164.0], [89.0, 63164.0], [89.1, 63164.0], [89.2, 63164.0], [89.3, 63367.0], [89.4, 63367.0], [89.5, 63367.0], [89.6, 63367.0], [89.7, 63367.0], [89.8, 63367.0], [89.9, 63367.0], [90.0, 63413.0], [90.1, 63413.0], [90.2, 63413.0], [90.3, 63413.0], [90.4, 63413.0], [90.5, 63413.0], [90.6, 63413.0], [90.7, 63413.0], [90.8, 63453.0], [90.9, 63453.0], [91.0, 63453.0], [91.1, 63453.0], [91.2, 63453.0], [91.3, 63453.0], [91.4, 63453.0], [91.5, 63472.0], [91.6, 63472.0], [91.7, 63472.0], [91.8, 63472.0], [91.9, 63472.0], [92.0, 63472.0], [92.1, 63472.0], [92.2, 64075.0], [92.3, 64075.0], [92.4, 64075.0], [92.5, 64075.0], [92.6, 64075.0], [92.7, 64075.0], [92.8, 64075.0], [92.9, 64689.0], [93.0, 64689.0], [93.1, 64689.0], [93.2, 64689.0], [93.3, 64689.0], [93.4, 64689.0], [93.5, 64689.0], [93.6, 65875.0], [93.7, 65875.0], [93.8, 65875.0], [93.9, 65875.0], [94.0, 65875.0], [94.1, 65875.0], [94.2, 65875.0], [94.3, 66315.0], [94.4, 66315.0], [94.5, 66315.0], [94.6, 66315.0], [94.7, 66315.0], [94.8, 66315.0], [94.9, 66315.0], [95.0, 66389.0], [95.1, 66389.0], [95.2, 66389.0], [95.3, 66389.0], [95.4, 66389.0], [95.5, 66389.0], [95.6, 66389.0], [95.7, 66389.0], [95.8, 67235.0], [95.9, 67235.0], [96.0, 67235.0], [96.1, 67235.0], [96.2, 67235.0], [96.3, 67235.0], [96.4, 67235.0], [96.5, 67533.0], [96.6, 67533.0], [96.7, 67533.0], [96.8, 67533.0], [96.9, 67533.0], [97.0, 67533.0], [97.1, 67533.0], [97.2, 67579.0], [97.3, 67579.0], [97.4, 67579.0], [97.5, 67579.0], [97.6, 67579.0], [97.7, 67579.0], [97.8, 67579.0], [97.9, 67879.0], [98.0, 67879.0], [98.1, 67879.0], [98.2, 67879.0], [98.3, 67879.0], [98.4, 67879.0], [98.5, 67879.0], [98.6, 68612.0], [98.7, 68612.0], [98.8, 68612.0], [98.9, 68612.0], [99.0, 68612.0], [99.1, 68612.0], [99.2, 68612.0], [99.3, 70939.0], [99.4, 70939.0], [99.5, 70939.0], [99.6, 70939.0], [99.7, 70939.0], [99.8, 70939.0], [99.9, 70939.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[0.0, 503.0], [0.1, 503.0], [0.2, 503.0], [0.3, 503.0], [0.4, 503.0], [0.5, 503.0], [0.6, 503.0], [0.7, 503.0], [0.8, 503.0], [0.9, 503.0], [1.0, 503.0], [1.1, 503.0], [1.2, 503.0], [1.3, 503.0], [1.4, 503.0], [1.5, 503.0], [1.6, 503.0], [1.7, 503.0], [1.8, 503.0], [1.9, 503.0], [2.0, 503.0], [2.1, 503.0], [2.2, 503.0], [2.3, 503.0], [2.4, 503.0], [2.5, 503.0], [2.6, 503.0], [2.7, 503.0], [2.8, 503.0], [2.9, 503.0], [3.0, 503.0], [3.1, 503.0], [3.2, 503.0], [3.3, 503.0], [3.4, 503.0], [3.5, 503.0], [3.6, 503.0], [3.7, 503.0], [3.8, 503.0], [3.9, 503.0], [4.0, 503.0], [4.1, 503.0], [4.2, 503.0], [4.3, 503.0], [4.4, 503.0], [4.5, 503.0], [4.6, 503.0], [4.7, 503.0], [4.8, 503.0], [4.9, 503.0], [5.0, 505.0], [5.1, 505.0], [5.2, 505.0], [5.3, 505.0], [5.4, 505.0], [5.5, 505.0], [5.6, 505.0], [5.7, 505.0], [5.8, 505.0], [5.9, 505.0], [6.0, 505.0], [6.1, 505.0], [6.2, 505.0], [6.3, 505.0], [6.4, 505.0], [6.5, 505.0], [6.6, 505.0], [6.7, 505.0], [6.8, 505.0], [6.9, 505.0], [7.0, 505.0], [7.1, 505.0], [7.2, 505.0], [7.3, 505.0], [7.4, 505.0], [7.5, 505.0], [7.6, 505.0], [7.7, 505.0], [7.8, 505.0], [7.9, 505.0], [8.0, 505.0], [8.1, 505.0], [8.2, 505.0], [8.3, 505.0], [8.4, 505.0], [8.5, 505.0], [8.6, 505.0], [8.7, 505.0], [8.8, 505.0], [8.9, 505.0], [9.0, 505.0], [9.1, 505.0], [9.2, 505.0], [9.3, 505.0], [9.4, 505.0], [9.5, 505.0], [9.6, 505.0], [9.7, 505.0], [9.8, 505.0], [9.9, 505.0], [10.0, 508.0], [10.1, 508.0], [10.2, 508.0], [10.3, 508.0], [10.4, 508.0], [10.5, 508.0], [10.6, 508.0], [10.7, 508.0], [10.8, 508.0], [10.9, 508.0], [11.0, 508.0], [11.1, 508.0], [11.2, 508.0], [11.3, 508.0], [11.4, 508.0], [11.5, 508.0], [11.6, 508.0], [11.7, 508.0], [11.8, 508.0], [11.9, 508.0], [12.0, 508.0], [12.1, 508.0], [12.2, 508.0], [12.3, 508.0], [12.4, 508.0], [12.5, 508.0], [12.6, 508.0], [12.7, 508.0], [12.8, 508.0], [12.9, 508.0], [13.0, 508.0], [13.1, 508.0], [13.2, 508.0], [13.3, 508.0], [13.4, 508.0], [13.5, 508.0], [13.6, 508.0], [13.7, 508.0], [13.8, 508.0], [13.9, 508.0], [14.0, 508.0], [14.1, 508.0], [14.2, 508.0], [14.3, 508.0], [14.4, 508.0], [14.5, 508.0], [14.6, 508.0], [14.7, 508.0], [14.8, 508.0], [14.9, 508.0], [15.0, 582.0], [15.1, 582.0], [15.2, 582.0], [15.3, 582.0], [15.4, 582.0], [15.5, 582.0], [15.6, 582.0], [15.7, 582.0], [15.8, 582.0], [15.9, 582.0], [16.0, 582.0], [16.1, 582.0], [16.2, 582.0], [16.3, 582.0], [16.4, 582.0], [16.5, 582.0], [16.6, 582.0], [16.7, 582.0], [16.8, 582.0], [16.9, 582.0], [17.0, 582.0], [17.1, 582.0], [17.2, 582.0], [17.3, 582.0], [17.4, 582.0], [17.5, 582.0], [17.6, 582.0], [17.7, 582.0], [17.8, 582.0], [17.9, 582.0], [18.0, 582.0], [18.1, 582.0], [18.2, 582.0], [18.3, 582.0], [18.4, 582.0], [18.5, 582.0], [18.6, 582.0], [18.7, 582.0], [18.8, 582.0], [18.9, 582.0], [19.0, 582.0], [19.1, 582.0], [19.2, 582.0], [19.3, 582.0], [19.4, 582.0], [19.5, 582.0], [19.6, 582.0], [19.7, 582.0], [19.8, 582.0], [19.9, 582.0], [20.0, 591.0], [20.1, 591.0], [20.2, 591.0], [20.3, 591.0], [20.4, 591.0], [20.5, 591.0], [20.6, 591.0], [20.7, 591.0], [20.8, 591.0], [20.9, 591.0], [21.0, 591.0], [21.1, 591.0], [21.2, 591.0], [21.3, 591.0], [21.4, 591.0], [21.5, 591.0], [21.6, 591.0], [21.7, 591.0], [21.8, 591.0], [21.9, 591.0], [22.0, 591.0], [22.1, 591.0], [22.2, 591.0], [22.3, 591.0], [22.4, 591.0], [22.5, 591.0], [22.6, 591.0], [22.7, 591.0], [22.8, 591.0], [22.9, 591.0], [23.0, 591.0], [23.1, 591.0], [23.2, 591.0], [23.3, 591.0], [23.4, 591.0], [23.5, 591.0], [23.6, 591.0], [23.7, 591.0], [23.8, 591.0], [23.9, 591.0], [24.0, 591.0], [24.1, 591.0], [24.2, 591.0], [24.3, 591.0], [24.4, 591.0], [24.5, 591.0], [24.6, 591.0], [24.7, 591.0], [24.8, 591.0], [24.9, 591.0], [25.0, 615.0], [25.1, 615.0], [25.2, 615.0], [25.3, 615.0], [25.4, 615.0], [25.5, 615.0], [25.6, 615.0], [25.7, 615.0], [25.8, 615.0], [25.9, 615.0], [26.0, 615.0], [26.1, 615.0], [26.2, 615.0], [26.3, 615.0], [26.4, 615.0], [26.5, 615.0], [26.6, 615.0], [26.7, 615.0], [26.8, 615.0], [26.9, 615.0], [27.0, 615.0], [27.1, 615.0], [27.2, 615.0], [27.3, 615.0], [27.4, 615.0], [27.5, 615.0], [27.6, 615.0], [27.7, 615.0], [27.8, 615.0], [27.9, 615.0], [28.0, 615.0], [28.1, 615.0], [28.2, 615.0], [28.3, 615.0], [28.4, 615.0], [28.5, 615.0], [28.6, 615.0], [28.7, 615.0], [28.8, 615.0], [28.9, 615.0], [29.0, 615.0], [29.1, 615.0], [29.2, 615.0], [29.3, 615.0], [29.4, 615.0], [29.5, 615.0], [29.6, 615.0], [29.7, 615.0], [29.8, 615.0], [29.9, 615.0], [30.0, 618.0], [30.1, 618.0], [30.2, 618.0], [30.3, 618.0], [30.4, 618.0], [30.5, 618.0], [30.6, 618.0], [30.7, 618.0], [30.8, 618.0], [30.9, 618.0], [31.0, 618.0], [31.1, 618.0], [31.2, 618.0], [31.3, 618.0], [31.4, 618.0], [31.5, 618.0], [31.6, 618.0], [31.7, 618.0], [31.8, 618.0], [31.9, 618.0], [32.0, 618.0], [32.1, 618.0], [32.2, 618.0], [32.3, 618.0], [32.4, 618.0], [32.5, 618.0], [32.6, 618.0], [32.7, 618.0], [32.8, 618.0], [32.9, 618.0], [33.0, 618.0], [33.1, 618.0], [33.2, 618.0], [33.3, 618.0], [33.4, 618.0], [33.5, 618.0], [33.6, 618.0], [33.7, 618.0], [33.8, 618.0], [33.9, 618.0], [34.0, 618.0], [34.1, 618.0], [34.2, 618.0], [34.3, 618.0], [34.4, 618.0], [34.5, 618.0], [34.6, 618.0], [34.7, 618.0], [34.8, 618.0], [34.9, 618.0], [35.0, 636.0], [35.1, 636.0], [35.2, 636.0], [35.3, 636.0], [35.4, 636.0], [35.5, 636.0], [35.6, 636.0], [35.7, 636.0], [35.8, 636.0], [35.9, 636.0], [36.0, 636.0], [36.1, 636.0], [36.2, 636.0], [36.3, 636.0], [36.4, 636.0], [36.5, 636.0], [36.6, 636.0], [36.7, 636.0], [36.8, 636.0], [36.9, 636.0], [37.0, 636.0], [37.1, 636.0], [37.2, 636.0], [37.3, 636.0], [37.4, 636.0], [37.5, 636.0], [37.6, 636.0], [37.7, 636.0], [37.8, 636.0], [37.9, 636.0], [38.0, 636.0], [38.1, 636.0], [38.2, 636.0], [38.3, 636.0], [38.4, 636.0], [38.5, 636.0], [38.6, 636.0], [38.7, 636.0], [38.8, 636.0], [38.9, 636.0], [39.0, 636.0], [39.1, 636.0], [39.2, 636.0], [39.3, 636.0], [39.4, 636.0], [39.5, 636.0], [39.6, 636.0], [39.7, 636.0], [39.8, 636.0], [39.9, 636.0], [40.0, 640.0], [40.1, 640.0], [40.2, 640.0], [40.3, 640.0], [40.4, 640.0], [40.5, 640.0], [40.6, 640.0], [40.7, 640.0], [40.8, 640.0], [40.9, 640.0], [41.0, 640.0], [41.1, 640.0], [41.2, 640.0], [41.3, 640.0], [41.4, 640.0], [41.5, 640.0], [41.6, 640.0], [41.7, 640.0], [41.8, 640.0], [41.9, 640.0], [42.0, 640.0], [42.1, 640.0], [42.2, 640.0], [42.3, 640.0], [42.4, 640.0], [42.5, 640.0], [42.6, 640.0], [42.7, 640.0], [42.8, 640.0], [42.9, 640.0], [43.0, 640.0], [43.1, 640.0], [43.2, 640.0], [43.3, 640.0], [43.4, 640.0], [43.5, 640.0], [43.6, 640.0], [43.7, 640.0], [43.8, 640.0], [43.9, 640.0], [44.0, 640.0], [44.1, 640.0], [44.2, 640.0], [44.3, 640.0], [44.4, 640.0], [44.5, 640.0], [44.6, 640.0], [44.7, 640.0], [44.8, 640.0], [44.9, 640.0], [45.0, 650.0], [45.1, 650.0], [45.2, 650.0], [45.3, 650.0], [45.4, 650.0], [45.5, 650.0], [45.6, 650.0], [45.7, 650.0], [45.8, 650.0], [45.9, 650.0], [46.0, 650.0], [46.1, 650.0], [46.2, 650.0], [46.3, 650.0], [46.4, 650.0], [46.5, 650.0], [46.6, 650.0], [46.7, 650.0], [46.8, 650.0], [46.9, 650.0], [47.0, 650.0], [47.1, 650.0], [47.2, 650.0], [47.3, 650.0], [47.4, 650.0], [47.5, 650.0], [47.6, 650.0], [47.7, 650.0], [47.8, 650.0], [47.9, 650.0], [48.0, 650.0], [48.1, 650.0], [48.2, 650.0], [48.3, 650.0], [48.4, 650.0], [48.5, 650.0], [48.6, 650.0], [48.7, 650.0], [48.8, 650.0], [48.9, 650.0], [49.0, 650.0], [49.1, 650.0], [49.2, 650.0], [49.3, 650.0], [49.4, 650.0], [49.5, 650.0], [49.6, 650.0], [49.7, 650.0], [49.8, 650.0], [49.9, 650.0], [50.0, 757.0], [50.1, 757.0], [50.2, 757.0], [50.3, 757.0], [50.4, 757.0], [50.5, 757.0], [50.6, 757.0], [50.7, 757.0], [50.8, 757.0], [50.9, 757.0], [51.0, 757.0], [51.1, 757.0], [51.2, 757.0], [51.3, 757.0], [51.4, 757.0], [51.5, 757.0], [51.6, 757.0], [51.7, 757.0], [51.8, 757.0], [51.9, 757.0], [52.0, 757.0], [52.1, 757.0], [52.2, 757.0], [52.3, 757.0], [52.4, 757.0], [52.5, 757.0], [52.6, 757.0], [52.7, 757.0], [52.8, 757.0], [52.9, 757.0], [53.0, 757.0], [53.1, 757.0], [53.2, 757.0], [53.3, 757.0], [53.4, 757.0], [53.5, 757.0], [53.6, 757.0], [53.7, 757.0], [53.8, 757.0], [53.9, 757.0], [54.0, 757.0], [54.1, 757.0], [54.2, 757.0], [54.3, 757.0], [54.4, 757.0], [54.5, 757.0], [54.6, 757.0], [54.7, 757.0], [54.8, 757.0], [54.9, 757.0], [55.0, 886.0], [55.1, 886.0], [55.2, 886.0], [55.3, 886.0], [55.4, 886.0], [55.5, 886.0], [55.6, 886.0], [55.7, 886.0], [55.8, 886.0], [55.9, 886.0], [56.0, 886.0], [56.1, 886.0], [56.2, 886.0], [56.3, 886.0], [56.4, 886.0], [56.5, 886.0], [56.6, 886.0], [56.7, 886.0], [56.8, 886.0], [56.9, 886.0], [57.0, 886.0], [57.1, 886.0], [57.2, 886.0], [57.3, 886.0], [57.4, 886.0], [57.5, 886.0], [57.6, 886.0], [57.7, 886.0], [57.8, 886.0], [57.9, 886.0], [58.0, 886.0], [58.1, 886.0], [58.2, 886.0], [58.3, 886.0], [58.4, 886.0], [58.5, 886.0], [58.6, 886.0], [58.7, 886.0], [58.8, 886.0], [58.9, 886.0], [59.0, 886.0], [59.1, 886.0], [59.2, 886.0], [59.3, 886.0], [59.4, 886.0], [59.5, 886.0], [59.6, 886.0], [59.7, 886.0], [59.8, 886.0], [59.9, 886.0], [60.0, 1415.0], [60.1, 1415.0], [60.2, 1415.0], [60.3, 1415.0], [60.4, 1415.0], [60.5, 1415.0], [60.6, 1415.0], [60.7, 1415.0], [60.8, 1415.0], [60.9, 1415.0], [61.0, 1415.0], [61.1, 1415.0], [61.2, 1415.0], [61.3, 1415.0], [61.4, 1415.0], [61.5, 1415.0], [61.6, 1415.0], [61.7, 1415.0], [61.8, 1415.0], [61.9, 1415.0], [62.0, 1415.0], [62.1, 1415.0], [62.2, 1415.0], [62.3, 1415.0], [62.4, 1415.0], [62.5, 1415.0], [62.6, 1415.0], [62.7, 1415.0], [62.8, 1415.0], [62.9, 1415.0], [63.0, 1415.0], [63.1, 1415.0], [63.2, 1415.0], [63.3, 1415.0], [63.4, 1415.0], [63.5, 1415.0], [63.6, 1415.0], [63.7, 1415.0], [63.8, 1415.0], [63.9, 1415.0], [64.0, 1415.0], [64.1, 1415.0], [64.2, 1415.0], [64.3, 1415.0], [64.4, 1415.0], [64.5, 1415.0], [64.6, 1415.0], [64.7, 1415.0], [64.8, 1415.0], [64.9, 1415.0], [65.0, 1426.0], [65.1, 1426.0], [65.2, 1426.0], [65.3, 1426.0], [65.4, 1426.0], [65.5, 1426.0], [65.6, 1426.0], [65.7, 1426.0], [65.8, 1426.0], [65.9, 1426.0], [66.0, 1426.0], [66.1, 1426.0], [66.2, 1426.0], [66.3, 1426.0], [66.4, 1426.0], [66.5, 1426.0], [66.6, 1426.0], [66.7, 1426.0], [66.8, 1426.0], [66.9, 1426.0], [67.0, 1426.0], [67.1, 1426.0], [67.2, 1426.0], [67.3, 1426.0], [67.4, 1426.0], [67.5, 1426.0], [67.6, 1426.0], [67.7, 1426.0], [67.8, 1426.0], [67.9, 1426.0], [68.0, 1426.0], [68.1, 1426.0], [68.2, 1426.0], [68.3, 1426.0], [68.4, 1426.0], [68.5, 1426.0], [68.6, 1426.0], [68.7, 1426.0], [68.8, 1426.0], [68.9, 1426.0], [69.0, 1426.0], [69.1, 1426.0], [69.2, 1426.0], [69.3, 1426.0], [69.4, 1426.0], [69.5, 1426.0], [69.6, 1426.0], [69.7, 1426.0], [69.8, 1426.0], [69.9, 1426.0], [70.0, 1439.0], [70.1, 1439.0], [70.2, 1439.0], [70.3, 1439.0], [70.4, 1439.0], [70.5, 1439.0], [70.6, 1439.0], [70.7, 1439.0], [70.8, 1439.0], [70.9, 1439.0], [71.0, 1439.0], [71.1, 1439.0], [71.2, 1439.0], [71.3, 1439.0], [71.4, 1439.0], [71.5, 1439.0], [71.6, 1439.0], [71.7, 1439.0], [71.8, 1439.0], [71.9, 1439.0], [72.0, 1439.0], [72.1, 1439.0], [72.2, 1439.0], [72.3, 1439.0], [72.4, 1439.0], [72.5, 1439.0], [72.6, 1439.0], [72.7, 1439.0], [72.8, 1439.0], [72.9, 1439.0], [73.0, 1439.0], [73.1, 1439.0], [73.2, 1439.0], [73.3, 1439.0], [73.4, 1439.0], [73.5, 1439.0], [73.6, 1439.0], [73.7, 1439.0], [73.8, 1439.0], [73.9, 1439.0], [74.0, 1439.0], [74.1, 1439.0], [74.2, 1439.0], [74.3, 1439.0], [74.4, 1439.0], [74.5, 1439.0], [74.6, 1439.0], [74.7, 1439.0], [74.8, 1439.0], [74.9, 1439.0], [75.0, 1618.0], [75.1, 1618.0], [75.2, 1618.0], [75.3, 1618.0], [75.4, 1618.0], [75.5, 1618.0], [75.6, 1618.0], [75.7, 1618.0], [75.8, 1618.0], [75.9, 1618.0], [76.0, 1618.0], [76.1, 1618.0], [76.2, 1618.0], [76.3, 1618.0], [76.4, 1618.0], [76.5, 1618.0], [76.6, 1618.0], [76.7, 1618.0], [76.8, 1618.0], [76.9, 1618.0], [77.0, 1618.0], [77.1, 1618.0], [77.2, 1618.0], [77.3, 1618.0], [77.4, 1618.0], [77.5, 1618.0], [77.6, 1618.0], [77.7, 1618.0], [77.8, 1618.0], [77.9, 1618.0], [78.0, 1618.0], [78.1, 1618.0], [78.2, 1618.0], [78.3, 1618.0], [78.4, 1618.0], [78.5, 1618.0], [78.6, 1618.0], [78.7, 1618.0], [78.8, 1618.0], [78.9, 1618.0], [79.0, 1618.0], [79.1, 1618.0], [79.2, 1618.0], [79.3, 1618.0], [79.4, 1618.0], [79.5, 1618.0], [79.6, 1618.0], [79.7, 1618.0], [79.8, 1618.0], [79.9, 1618.0], [80.0, 1635.0], [80.1, 1635.0], [80.2, 1635.0], [80.3, 1635.0], [80.4, 1635.0], [80.5, 1635.0], [80.6, 1635.0], [80.7, 1635.0], [80.8, 1635.0], [80.9, 1635.0], [81.0, 1635.0], [81.1, 1635.0], [81.2, 1635.0], [81.3, 1635.0], [81.4, 1635.0], [81.5, 1635.0], [81.6, 1635.0], [81.7, 1635.0], [81.8, 1635.0], [81.9, 1635.0], [82.0, 1635.0], [82.1, 1635.0], [82.2, 1635.0], [82.3, 1635.0], [82.4, 1635.0], [82.5, 1635.0], [82.6, 1635.0], [82.7, 1635.0], [82.8, 1635.0], [82.9, 1635.0], [83.0, 1635.0], [83.1, 1635.0], [83.2, 1635.0], [83.3, 1635.0], [83.4, 1635.0], [83.5, 1635.0], [83.6, 1635.0], [83.7, 1635.0], [83.8, 1635.0], [83.9, 1635.0], [84.0, 1635.0], [84.1, 1635.0], [84.2, 1635.0], [84.3, 1635.0], [84.4, 1635.0], [84.5, 1635.0], [84.6, 1635.0], [84.7, 1635.0], [84.8, 1635.0], [84.9, 1635.0], [85.0, 1637.0], [85.1, 1637.0], [85.2, 1637.0], [85.3, 1637.0], [85.4, 1637.0], [85.5, 1637.0], [85.6, 1637.0], [85.7, 1637.0], [85.8, 1637.0], [85.9, 1637.0], [86.0, 1637.0], [86.1, 1637.0], [86.2, 1637.0], [86.3, 1637.0], [86.4, 1637.0], [86.5, 1637.0], [86.6, 1637.0], [86.7, 1637.0], [86.8, 1637.0], [86.9, 1637.0], [87.0, 1637.0], [87.1, 1637.0], [87.2, 1637.0], [87.3, 1637.0], [87.4, 1637.0], [87.5, 1637.0], [87.6, 1637.0], [87.7, 1637.0], [87.8, 1637.0], [87.9, 1637.0], [88.0, 1637.0], [88.1, 1637.0], [88.2, 1637.0], [88.3, 1637.0], [88.4, 1637.0], [88.5, 1637.0], [88.6, 1637.0], [88.7, 1637.0], [88.8, 1637.0], [88.9, 1637.0], [89.0, 1637.0], [89.1, 1637.0], [89.2, 1637.0], [89.3, 1637.0], [89.4, 1637.0], [89.5, 1637.0], [89.6, 1637.0], [89.7, 1637.0], [89.8, 1637.0], [89.9, 1637.0], [90.0, 1841.0], [90.1, 1841.0], [90.2, 1841.0], [90.3, 1841.0], [90.4, 1841.0], [90.5, 1841.0], [90.6, 1841.0], [90.7, 1841.0], [90.8, 1841.0], [90.9, 1841.0], [91.0, 1841.0], [91.1, 1841.0], [91.2, 1841.0], [91.3, 1841.0], [91.4, 1841.0], [91.5, 1841.0], [91.6, 1841.0], [91.7, 1841.0], [91.8, 1841.0], [91.9, 1841.0], [92.0, 1841.0], [92.1, 1841.0], [92.2, 1841.0], [92.3, 1841.0], [92.4, 1841.0], [92.5, 1841.0], [92.6, 1841.0], [92.7, 1841.0], [92.8, 1841.0], [92.9, 1841.0], [93.0, 1841.0], [93.1, 1841.0], [93.2, 1841.0], [93.3, 1841.0], [93.4, 1841.0], [93.5, 1841.0], [93.6, 1841.0], [93.7, 1841.0], [93.8, 1841.0], [93.9, 1841.0], [94.0, 1841.0], [94.1, 1841.0], [94.2, 1841.0], [94.3, 1841.0], [94.4, 1841.0], [94.5, 1841.0], [94.6, 1841.0], [94.7, 1841.0], [94.8, 1841.0], [94.9, 1841.0], [95.0, 2098.0], [95.1, 2098.0], [95.2, 2098.0], [95.3, 2098.0], [95.4, 2098.0], [95.5, 2098.0], [95.6, 2098.0], [95.7, 2098.0], [95.8, 2098.0], [95.9, 2098.0], [96.0, 2098.0], [96.1, 2098.0], [96.2, 2098.0], [96.3, 2098.0], [96.4, 2098.0], [96.5, 2098.0], [96.6, 2098.0], [96.7, 2098.0], [96.8, 2098.0], [96.9, 2098.0], [97.0, 2098.0], [97.1, 2098.0], [97.2, 2098.0], [97.3, 2098.0], [97.4, 2098.0], [97.5, 2098.0], [97.6, 2098.0], [97.7, 2098.0], [97.8, 2098.0], [97.9, 2098.0], [98.0, 2098.0], [98.1, 2098.0], [98.2, 2098.0], [98.3, 2098.0], [98.4, 2098.0], [98.5, 2098.0], [98.6, 2098.0], [98.7, 2098.0], [98.8, 2098.0], [98.9, 2098.0], [99.0, 2098.0], [99.1, 2098.0], [99.2, 2098.0], [99.3, 2098.0], [99.4, 2098.0], [99.5, 2098.0], [99.6, 2098.0], [99.7, 2098.0], [99.8, 2098.0], [99.9, 2098.0]], "isOverall": false, "label": "https://nims-frontend.nemmadi.in/home", "isController": false}, {"data": [[0.0, 136.0], [0.1, 143.0], [0.2, 144.0], [0.3, 147.0], [0.4, 149.0], [0.5, 160.0], [0.6, 165.0], [0.7, 166.0], [0.8, 170.0], [0.9, 172.0], [1.0, 174.0], [1.1, 178.0], [1.2, 180.0], [1.3, 186.0], [1.4, 194.0], [1.5, 195.0], [1.6, 195.0], [1.7, 198.0], [1.8, 198.0], [1.9, 199.0], [2.0, 200.0], [2.1, 200.0], [2.2, 206.0], [2.3, 211.0], [2.4, 218.0], [2.5, 219.0], [2.6, 223.0], [2.7, 225.0], [2.8, 228.0], [2.9, 229.0], [3.0, 230.0], [3.1, 232.0], [3.2, 232.0], [3.3, 233.0], [3.4, 233.0], [3.5, 234.0], [3.6, 235.0], [3.7, 237.0], [3.8, 239.0], [3.9, 242.0], [4.0, 247.0], [4.1, 248.0], [4.2, 250.0], [4.3, 251.0], [4.4, 252.0], [4.5, 253.0], [4.6, 254.0], [4.7, 256.0], [4.8, 259.0], [4.9, 265.0], [5.0, 266.0], [5.1, 268.0], [5.2, 271.0], [5.3, 271.0], [5.4, 273.0], [5.5, 274.0], [5.6, 274.0], [5.7, 276.0], [5.8, 277.0], [5.9, 277.0], [6.0, 279.0], [6.1, 280.0], [6.2, 281.0], [6.3, 281.0], [6.4, 283.0], [6.5, 285.0], [6.6, 286.0], [6.7, 286.0], [6.8, 289.0], [6.9, 293.0], [7.0, 293.0], [7.1, 294.0], [7.2, 296.0], [7.3, 296.0], [7.4, 296.0], [7.5, 297.0], [7.6, 297.0], [7.7, 297.0], [7.8, 297.0], [7.9, 298.0], [8.0, 298.0], [8.1, 298.0], [8.2, 299.0], [8.3, 299.0], [8.4, 299.0], [8.5, 299.0], [8.6, 300.0], [8.7, 300.0], [8.8, 300.0], [8.9, 300.0], [9.0, 301.0], [9.1, 301.0], [9.2, 302.0], [9.3, 302.0], [9.4, 302.0], [9.5, 303.0], [9.6, 304.0], [9.7, 304.0], [9.8, 304.0], [9.9, 305.0], [10.0, 306.0], [10.1, 307.0], [10.2, 308.0], [10.3, 309.0], [10.4, 309.0], [10.5, 310.0], [10.6, 311.0], [10.7, 313.0], [10.8, 313.0], [10.9, 316.0], [11.0, 317.0], [11.1, 319.0], [11.2, 321.0], [11.3, 323.0], [11.4, 325.0], [11.5, 325.0], [11.6, 326.0], [11.7, 327.0], [11.8, 327.0], [11.9, 327.0], [12.0, 328.0], [12.1, 328.0], [12.2, 329.0], [12.3, 330.0], [12.4, 331.0], [12.5, 335.0], [12.6, 337.0], [12.7, 337.0], [12.8, 338.0], [12.9, 339.0], [13.0, 340.0], [13.1, 341.0], [13.2, 341.0], [13.3, 342.0], [13.4, 342.0], [13.5, 342.0], [13.6, 343.0], [13.7, 344.0], [13.8, 344.0], [13.9, 344.0], [14.0, 344.0], [14.1, 345.0], [14.2, 346.0], [14.3, 346.0], [14.4, 347.0], [14.5, 348.0], [14.6, 348.0], [14.7, 349.0], [14.8, 350.0], [14.9, 350.0], [15.0, 350.0], [15.1, 350.0], [15.2, 351.0], [15.3, 351.0], [15.4, 352.0], [15.5, 352.0], [15.6, 354.0], [15.7, 354.0], [15.8, 355.0], [15.9, 357.0], [16.0, 358.0], [16.1, 359.0], [16.2, 359.0], [16.3, 360.0], [16.4, 362.0], [16.5, 363.0], [16.6, 366.0], [16.7, 368.0], [16.8, 371.0], [16.9, 372.0], [17.0, 373.0], [17.1, 374.0], [17.2, 376.0], [17.3, 377.0], [17.4, 378.0], [17.5, 380.0], [17.6, 380.0], [17.7, 381.0], [17.8, 382.0], [17.9, 382.0], [18.0, 383.0], [18.1, 383.0], [18.2, 384.0], [18.3, 387.0], [18.4, 388.0], [18.5, 388.0], [18.6, 390.0], [18.7, 393.0], [18.8, 394.0], [18.9, 394.0], [19.0, 395.0], [19.1, 398.0], [19.2, 399.0], [19.3, 400.0], [19.4, 401.0], [19.5, 402.0], [19.6, 403.0], [19.7, 404.0], [19.8, 407.0], [19.9, 408.0], [20.0, 409.0], [20.1, 410.0], [20.2, 412.0], [20.3, 412.0], [20.4, 413.0], [20.5, 413.0], [20.6, 414.0], [20.7, 415.0], [20.8, 415.0], [20.9, 416.0], [21.0, 417.0], [21.1, 420.0], [21.2, 422.0], [21.3, 424.0], [21.4, 430.0], [21.5, 436.0], [21.6, 439.0], [21.7, 439.0], [21.8, 443.0], [21.9, 444.0], [22.0, 444.0], [22.1, 445.0], [22.2, 446.0], [22.3, 448.0], [22.4, 449.0], [22.5, 449.0], [22.6, 450.0], [22.7, 451.0], [22.8, 451.0], [22.9, 451.0], [23.0, 452.0], [23.1, 453.0], [23.2, 454.0], [23.3, 455.0], [23.4, 458.0], [23.5, 460.0], [23.6, 461.0], [23.7, 462.0], [23.8, 463.0], [23.9, 463.0], [24.0, 463.0], [24.1, 464.0], [24.2, 464.0], [24.3, 465.0], [24.4, 465.0], [24.5, 466.0], [24.6, 466.0], [24.7, 467.0], [24.8, 468.0], [24.9, 470.0], [25.0, 473.0], [25.1, 476.0], [25.2, 478.0], [25.3, 479.0], [25.4, 479.0], [25.5, 480.0], [25.6, 481.0], [25.7, 481.0], [25.8, 482.0], [25.9, 483.0], [26.0, 483.0], [26.1, 487.0], [26.2, 487.0], [26.3, 489.0], [26.4, 492.0], [26.5, 495.0], [26.6, 498.0], [26.7, 500.0], [26.8, 502.0], [26.9, 502.0], [27.0, 503.0], [27.1, 503.0], [27.2, 504.0], [27.3, 504.0], [27.4, 505.0], [27.5, 505.0], [27.6, 505.0], [27.7, 507.0], [27.8, 507.0], [27.9, 508.0], [28.0, 509.0], [28.1, 510.0], [28.2, 510.0], [28.3, 511.0], [28.4, 511.0], [28.5, 512.0], [28.6, 512.0], [28.7, 514.0], [28.8, 515.0], [28.9, 516.0], [29.0, 519.0], [29.1, 521.0], [29.2, 521.0], [29.3, 522.0], [29.4, 522.0], [29.5, 524.0], [29.6, 524.0], [29.7, 524.0], [29.8, 525.0], [29.9, 532.0], [30.0, 537.0], [30.1, 539.0], [30.2, 541.0], [30.3, 544.0], [30.4, 546.0], [30.5, 548.0], [30.6, 557.0], [30.7, 559.0], [30.8, 559.0], [30.9, 560.0], [31.0, 560.0], [31.1, 561.0], [31.2, 561.0], [31.3, 562.0], [31.4, 562.0], [31.5, 564.0], [31.6, 565.0], [31.7, 566.0], [31.8, 569.0], [31.9, 575.0], [32.0, 576.0], [32.1, 577.0], [32.2, 580.0], [32.3, 589.0], [32.4, 591.0], [32.5, 593.0], [32.6, 601.0], [32.7, 602.0], [32.8, 608.0], [32.9, 610.0], [33.0, 620.0], [33.1, 620.0], [33.2, 640.0], [33.3, 640.0], [33.4, 643.0], [33.5, 645.0], [33.6, 654.0], [33.7, 657.0], [33.8, 658.0], [33.9, 661.0], [34.0, 664.0], [34.1, 670.0], [34.2, 672.0], [34.3, 674.0], [34.4, 675.0], [34.5, 675.0], [34.6, 676.0], [34.7, 678.0], [34.8, 687.0], [34.9, 692.0], [35.0, 715.0], [35.1, 721.0], [35.2, 726.0], [35.3, 726.0], [35.4, 727.0], [35.5, 728.0], [35.6, 728.0], [35.7, 728.0], [35.8, 729.0], [35.9, 729.0], [36.0, 731.0], [36.1, 736.0], [36.2, 743.0], [36.3, 749.0], [36.4, 750.0], [36.5, 754.0], [36.6, 755.0], [36.7, 755.0], [36.8, 755.0], [36.9, 756.0], [37.0, 757.0], [37.1, 760.0], [37.2, 761.0], [37.3, 762.0], [37.4, 763.0], [37.5, 763.0], [37.6, 763.0], [37.7, 764.0], [37.8, 764.0], [37.9, 767.0], [38.0, 777.0], [38.1, 778.0], [38.2, 784.0], [38.3, 784.0], [38.4, 786.0], [38.5, 786.0], [38.6, 792.0], [38.7, 793.0], [38.8, 797.0], [38.9, 799.0], [39.0, 806.0], [39.1, 807.0], [39.2, 811.0], [39.3, 811.0], [39.4, 812.0], [39.5, 814.0], [39.6, 814.0], [39.7, 815.0], [39.8, 815.0], [39.9, 816.0], [40.0, 818.0], [40.1, 818.0], [40.2, 819.0], [40.3, 819.0], [40.4, 819.0], [40.5, 820.0], [40.6, 820.0], [40.7, 820.0], [40.8, 820.0], [40.9, 821.0], [41.0, 821.0], [41.1, 822.0], [41.2, 822.0], [41.3, 823.0], [41.4, 824.0], [41.5, 826.0], [41.6, 828.0], [41.7, 829.0], [41.8, 829.0], [41.9, 829.0], [42.0, 831.0], [42.1, 835.0], [42.2, 837.0], [42.3, 840.0], [42.4, 841.0], [42.5, 843.0], [42.6, 843.0], [42.7, 844.0], [42.8, 844.0], [42.9, 844.0], [43.0, 844.0], [43.1, 845.0], [43.2, 851.0], [43.3, 857.0], [43.4, 861.0], [43.5, 865.0], [43.6, 865.0], [43.7, 875.0], [43.8, 879.0], [43.9, 881.0], [44.0, 883.0], [44.1, 885.0], [44.2, 886.0], [44.3, 888.0], [44.4, 888.0], [44.5, 891.0], [44.6, 892.0], [44.7, 893.0], [44.8, 894.0], [44.9, 896.0], [45.0, 912.0], [45.1, 916.0], [45.2, 918.0], [45.3, 924.0], [45.4, 929.0], [45.5, 931.0], [45.6, 932.0], [45.7, 933.0], [45.8, 934.0], [45.9, 936.0], [46.0, 937.0], [46.1, 955.0], [46.2, 967.0], [46.3, 978.0], [46.4, 979.0], [46.5, 980.0], [46.6, 984.0], [46.7, 986.0], [46.8, 991.0], [46.9, 993.0], [47.0, 994.0], [47.1, 997.0], [47.2, 999.0], [47.3, 1007.0], [47.4, 1008.0], [47.5, 1013.0], [47.6, 1025.0], [47.7, 1029.0], [47.8, 1035.0], [47.9, 1043.0], [48.0, 1044.0], [48.1, 1047.0], [48.2, 1052.0], [48.3, 1055.0], [48.4, 1060.0], [48.5, 1061.0], [48.6, 1069.0], [48.7, 1084.0], [48.8, 1085.0], [48.9, 1088.0], [49.0, 1097.0], [49.1, 1099.0], [49.2, 1106.0], [49.3, 1113.0], [49.4, 1116.0], [49.5, 1118.0], [49.6, 1120.0], [49.7, 1120.0], [49.8, 1121.0], [49.9, 1121.0], [50.0, 1126.0], [50.1, 1127.0], [50.2, 1134.0], [50.3, 1144.0], [50.4, 1145.0], [50.5, 1156.0], [50.6, 1165.0], [50.7, 1178.0], [50.8, 1180.0], [50.9, 1182.0], [51.0, 1190.0], [51.1, 1191.0], [51.2, 1198.0], [51.3, 1202.0], [51.4, 1207.0], [51.5, 1208.0], [51.6, 1212.0], [51.7, 1215.0], [51.8, 1223.0], [51.9, 1226.0], [52.0, 1227.0], [52.1, 1229.0], [52.2, 1232.0], [52.3, 1234.0], [52.4, 1235.0], [52.5, 1236.0], [52.6, 1237.0], [52.7, 1238.0], [52.8, 1238.0], [52.9, 1244.0], [53.0, 1250.0], [53.1, 1253.0], [53.2, 1255.0], [53.3, 1257.0], [53.4, 1260.0], [53.5, 1262.0], [53.6, 1264.0], [53.7, 1279.0], [53.8, 1280.0], [53.9, 1281.0], [54.0, 1282.0], [54.1, 1283.0], [54.2, 1284.0], [54.3, 1284.0], [54.4, 1285.0], [54.5, 1286.0], [54.6, 1294.0], [54.7, 1294.0], [54.8, 1299.0], [54.9, 1300.0], [55.0, 1301.0], [55.1, 1306.0], [55.2, 1309.0], [55.3, 1312.0], [55.4, 1315.0], [55.5, 1318.0], [55.6, 1320.0], [55.7, 1327.0], [55.8, 1328.0], [55.9, 1347.0], [56.0, 1350.0], [56.1, 1352.0], [56.2, 1372.0], [56.3, 1374.0], [56.4, 1375.0], [56.5, 1384.0], [56.6, 1390.0], [56.7, 1410.0], [56.8, 1415.0], [56.9, 1421.0], [57.0, 1425.0], [57.1, 1426.0], [57.2, 1427.0], [57.3, 1428.0], [57.4, 1434.0], [57.5, 1435.0], [57.6, 1437.0], [57.7, 1438.0], [57.8, 1439.0], [57.9, 1442.0], [58.0, 1444.0], [58.1, 1452.0], [58.2, 1454.0], [58.3, 1472.0], [58.4, 1479.0], [58.5, 1479.0], [58.6, 1482.0], [58.7, 1488.0], [58.8, 1491.0], [58.9, 1491.0], [59.0, 1492.0], [59.1, 1493.0], [59.2, 1494.0], [59.3, 1500.0], [59.4, 1501.0], [59.5, 1512.0], [59.6, 1519.0], [59.7, 1528.0], [59.8, 1530.0], [59.9, 1539.0], [60.0, 1542.0], [60.1, 1554.0], [60.2, 1556.0], [60.3, 1563.0], [60.4, 1568.0], [60.5, 1573.0], [60.6, 1573.0], [60.7, 1574.0], [60.8, 1576.0], [60.9, 1600.0], [61.0, 1606.0], [61.1, 1627.0], [61.2, 1632.0], [61.3, 1634.0], [61.4, 1638.0], [61.5, 1641.0], [61.6, 1641.0], [61.7, 1655.0], [61.8, 1677.0], [61.9, 1680.0], [62.0, 1685.0], [62.1, 1691.0], [62.2, 1694.0], [62.3, 1696.0], [62.4, 1697.0], [62.5, 1699.0], [62.6, 1704.0], [62.7, 1707.0], [62.8, 1711.0], [62.9, 1714.0], [63.0, 1727.0], [63.1, 1729.0], [63.2, 1736.0], [63.3, 1738.0], [63.4, 1742.0], [63.5, 1747.0], [63.6, 1748.0], [63.7, 1762.0], [63.8, 1766.0], [63.9, 1766.0], [64.0, 1768.0], [64.1, 1768.0], [64.2, 1773.0], [64.3, 1775.0], [64.4, 1781.0], [64.5, 1781.0], [64.6, 1782.0], [64.7, 1782.0], [64.8, 1803.0], [64.9, 1805.0], [65.0, 1809.0], [65.1, 1809.0], [65.2, 1810.0], [65.3, 1812.0], [65.4, 1813.0], [65.5, 1815.0], [65.6, 1823.0], [65.7, 1828.0], [65.8, 1829.0], [65.9, 1832.0], [66.0, 1833.0], [66.1, 1834.0], [66.2, 1834.0], [66.3, 1843.0], [66.4, 1845.0], [66.5, 1847.0], [66.6, 1850.0], [66.7, 1871.0], [66.8, 1873.0], [66.9, 1873.0], [67.0, 1873.0], [67.1, 1874.0], [67.2, 1874.0], [67.3, 1875.0], [67.4, 1876.0], [67.5, 1878.0], [67.6, 1882.0], [67.7, 1882.0], [67.8, 1883.0], [67.9, 1884.0], [68.0, 1885.0], [68.1, 1887.0], [68.2, 1905.0], [68.3, 1912.0], [68.4, 1913.0], [68.5, 1913.0], [68.6, 1914.0], [68.7, 1915.0], [68.8, 1926.0], [68.9, 1926.0], [69.0, 1948.0], [69.1, 1948.0], [69.2, 1949.0], [69.3, 1950.0], [69.4, 1954.0], [69.5, 1956.0], [69.6, 1976.0], [69.7, 1978.0], [69.8, 1980.0], [69.9, 1982.0], [70.0, 1982.0], [70.1, 1982.0], [70.2, 1983.0], [70.3, 1987.0], [70.4, 1989.0], [70.5, 1990.0], [70.6, 1991.0], [70.7, 1995.0], [70.8, 1996.0], [70.9, 1996.0], [71.0, 1997.0], [71.1, 1997.0], [71.2, 1997.0], [71.3, 1998.0], [71.4, 2003.0], [71.5, 2005.0], [71.6, 2009.0], [71.7, 2021.0], [71.8, 2022.0], [71.9, 2038.0], [72.0, 2044.0], [72.1, 2046.0], [72.2, 2052.0], [72.3, 2055.0], [72.4, 2055.0], [72.5, 2057.0], [72.6, 2058.0], [72.7, 2059.0], [72.8, 2063.0], [72.9, 2065.0], [73.0, 2077.0], [73.1, 2080.0], [73.2, 2088.0], [73.3, 2108.0], [73.4, 2111.0], [73.5, 2125.0], [73.6, 2127.0], [73.7, 2127.0], [73.8, 2129.0], [73.9, 2129.0], [74.0, 2148.0], [74.1, 2154.0], [74.2, 2176.0], [74.3, 2177.0], [74.4, 2180.0], [74.5, 2181.0], [74.6, 2182.0], [74.7, 2184.0], [74.8, 2186.0], [74.9, 2230.0], [75.0, 2232.0], [75.1, 2244.0], [75.2, 2246.0], [75.3, 2247.0], [75.4, 2249.0], [75.5, 2250.0], [75.6, 2251.0], [75.7, 2256.0], [75.8, 2259.0], [75.9, 2278.0], [76.0, 2309.0], [76.1, 2318.0], [76.2, 2320.0], [76.3, 2324.0], [76.4, 2335.0], [76.5, 2353.0], [76.6, 2357.0], [76.7, 2366.0], [76.8, 2369.0], [76.9, 2372.0], [77.0, 2382.0], [77.1, 2400.0], [77.2, 2420.0], [77.3, 2423.0], [77.4, 2424.0], [77.5, 2428.0], [77.6, 2447.0], [77.7, 2448.0], [77.8, 2477.0], [77.9, 2494.0], [78.0, 2517.0], [78.1, 2521.0], [78.2, 2529.0], [78.3, 2538.0], [78.4, 2581.0], [78.5, 2582.0], [78.6, 2592.0], [78.7, 2628.0], [78.8, 2661.0], [78.9, 2688.0], [79.0, 2691.0], [79.1, 2721.0], [79.2, 2751.0], [79.3, 2800.0], [79.4, 2867.0], [79.5, 2896.0], [79.6, 2898.0], [79.7, 2916.0], [79.8, 3004.0], [79.9, 3072.0], [80.0, 3075.0], [80.1, 3105.0], [80.2, 3117.0], [80.3, 3140.0], [80.4, 3166.0], [80.5, 3242.0], [80.6, 3266.0], [80.7, 3271.0], [80.8, 3275.0], [80.9, 3276.0], [81.0, 3277.0], [81.1, 3278.0], [81.2, 3279.0], [81.3, 3371.0], [81.4, 3381.0], [81.5, 3414.0], [81.6, 3414.0], [81.7, 3417.0], [81.8, 3423.0], [81.9, 3441.0], [82.0, 3443.0], [82.1, 3516.0], [82.2, 3578.0], [82.3, 3614.0], [82.4, 3614.0], [82.5, 3721.0], [82.6, 3770.0], [82.7, 3770.0], [82.8, 3781.0], [82.9, 3797.0], [83.0, 3804.0], [83.1, 3814.0], [83.2, 3821.0], [83.3, 3824.0], [83.4, 3830.0], [83.5, 3831.0], [83.6, 3845.0], [83.7, 3863.0], [83.8, 3875.0], [83.9, 3939.0], [84.0, 3956.0], [84.1, 4024.0], [84.2, 4148.0], [84.3, 4152.0], [84.4, 4385.0], [84.5, 4419.0], [84.6, 4422.0], [84.7, 4436.0], [84.8, 4499.0], [84.9, 4509.0], [85.0, 4511.0], [85.1, 4570.0], [85.2, 4678.0], [85.3, 4698.0], [85.4, 4711.0], [85.5, 4751.0], [85.6, 4772.0], [85.7, 4798.0], [85.8, 4798.0], [85.9, 4800.0], [86.0, 4809.0], [86.1, 4822.0], [86.2, 4856.0], [86.3, 4869.0], [86.4, 4870.0], [86.5, 4871.0], [86.6, 4871.0], [86.7, 4940.0], [86.8, 4942.0], [86.9, 4945.0], [87.0, 4948.0], [87.1, 4963.0], [87.2, 4995.0], [87.3, 5122.0], [87.4, 5158.0], [87.5, 5191.0], [87.6, 5259.0], [87.7, 5311.0], [87.8, 5427.0], [87.9, 5466.0], [88.0, 5531.0], [88.1, 5569.0], [88.2, 5573.0], [88.3, 5593.0], [88.4, 6346.0], [88.5, 6387.0], [88.6, 6390.0], [88.7, 6421.0], [88.8, 6422.0], [88.9, 6452.0], [89.0, 6454.0], [89.1, 6455.0], [89.2, 6487.0], [89.3, 6488.0], [89.4, 6489.0], [89.5, 6489.0], [89.6, 6491.0], [89.7, 6492.0], [89.8, 6503.0], [89.9, 6504.0], [90.0, 6504.0], [90.1, 6505.0], [90.2, 6518.0], [90.3, 6518.0], [90.4, 6519.0], [90.5, 6525.0], [90.6, 6527.0], [90.7, 6542.0], [90.8, 6553.0], [90.9, 6555.0], [91.0, 6598.0], [91.1, 6605.0], [91.2, 6610.0], [91.3, 6615.0], [91.4, 6618.0], [91.5, 6620.0], [91.6, 6621.0], [91.7, 6622.0], [91.8, 6625.0], [91.9, 6682.0], [92.0, 6685.0], [92.1, 7056.0], [92.2, 7253.0], [92.3, 7777.0], [92.4, 7930.0], [92.5, 8262.0], [92.6, 8483.0], [92.7, 8493.0], [92.8, 8626.0], [92.9, 8627.0], [93.0, 8629.0], [93.1, 8630.0], [93.2, 8630.0], [93.3, 8633.0], [93.4, 8762.0], [93.5, 8912.0], [93.6, 9113.0], [93.7, 9272.0], [93.8, 9533.0], [93.9, 9566.0], [94.0, 10158.0], [94.1, 11886.0], [94.2, 12098.0], [94.3, 12193.0], [94.4, 12367.0], [94.5, 12478.0], [94.6, 12580.0], [94.7, 12621.0], [94.8, 12822.0], [94.9, 12924.0], [95.0, 13013.0], [95.1, 13043.0], [95.2, 13138.0], [95.3, 13256.0], [95.4, 13351.0], [95.5, 13401.0], [95.6, 13452.0], [95.7, 15889.0], [95.8, 16085.0], [95.9, 16388.0], [96.0, 16452.0], [96.1, 16580.0], [96.2, 16590.0], [96.3, 16730.0], [96.4, 16783.0], [96.5, 16894.0], [96.6, 16901.0], [96.7, 17016.0], [96.8, 17056.0], [96.9, 17061.0], [97.0, 17072.0], [97.1, 17074.0], [97.2, 17161.0], [97.3, 17503.0], [97.4, 17603.0], [97.5, 19113.0], [97.6, 19841.0], [97.7, 19882.0], [97.8, 20160.0], [97.9, 20321.0], [98.0, 20531.0], [98.1, 20670.0], [98.2, 20869.0], [98.3, 21153.0], [98.4, 21344.0], [98.5, 21548.0], [98.6, 21607.0], [98.7, 21613.0], [98.8, 21619.0], [98.9, 21632.0], [99.0, 21728.0], [99.1, 21730.0], [99.2, 21756.0], [99.3, 23159.0], [99.4, 23187.0], [99.5, 23263.0], [99.6, 23369.0], [99.7, 23525.0], [99.8, 23893.0], [99.9, 25972.0], [100.0, 27772.0]], "isOverall": false, "label": "https://nims-backend.nemmadi.in/graphql/", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 292.0, "series": [{"data": [[2300.0, 1.0], [1200.0, 3.0], [1300.0, 17.0], [1400.0, 13.0], [700.0, 2.0], [1500.0, 7.0], [1600.0, 5.0], [800.0, 5.0], [1700.0, 4.0], [900.0, 22.0], [2000.0, 1.0]], "isOverall": false, "label": "https://nims-mobile.nemmadi.in/dashboard", "isController": false}, {"data": [[66300.0, 2.0], [67500.0, 2.0], [70900.0, 1.0], [40800.0, 2.0], [40200.0, 1.0], [40300.0, 1.0], [41800.0, 2.0], [41600.0, 1.0], [43000.0, 3.0], [42600.0, 2.0], [42900.0, 2.0], [41300.0, 1.0], [42800.0, 1.0], [41900.0, 1.0], [42500.0, 1.0], [43100.0, 1.0], [43800.0, 3.0], [43700.0, 2.0], [43500.0, 4.0], [43400.0, 2.0], [44700.0, 1.0], [44600.0, 1.0], [43600.0, 3.0], [44200.0, 1.0], [44900.0, 2.0], [44000.0, 1.0], [43900.0, 1.0], [44400.0, 1.0], [45900.0, 3.0], [46000.0, 1.0], [45600.0, 1.0], [45300.0, 1.0], [46400.0, 1.0], [47200.0, 1.0], [48500.0, 1.0], [47800.0, 1.0], [49400.0, 2.0], [49900.0, 1.0], [50100.0, 1.0], [49600.0, 1.0], [49200.0, 2.0], [52000.0, 1.0], [51500.0, 1.0], [51300.0, 1.0], [53000.0, 1.0], [53200.0, 1.0], [54800.0, 3.0], [54000.0, 1.0], [54400.0, 1.0], [53900.0, 1.0], [53700.0, 1.0], [53600.0, 1.0], [55200.0, 1.0], [55000.0, 1.0], [54100.0, 2.0], [54700.0, 1.0], [54500.0, 1.0], [55600.0, 2.0], [56000.0, 3.0], [55900.0, 2.0], [55400.0, 3.0], [56600.0, 4.0], [56800.0, 2.0], [56700.0, 1.0], [55700.0, 3.0], [57100.0, 1.0], [56900.0, 1.0], [55500.0, 2.0], [55300.0, 1.0], [56100.0, 1.0], [57200.0, 2.0], [56400.0, 1.0], [56500.0, 1.0], [57500.0, 1.0], [57800.0, 1.0], [58300.0, 1.0], [58700.0, 1.0], [58600.0, 1.0], [58900.0, 1.0], [58400.0, 1.0], [59300.0, 1.0], [59900.0, 2.0], [60100.0, 1.0], [60600.0, 1.0], [60200.0, 1.0], [62900.0, 2.0], [63400.0, 3.0], [63300.0, 1.0], [61900.0, 1.0], [63100.0, 2.0], [64000.0, 1.0], [64600.0, 1.0], [65800.0, 1.0], [67800.0, 1.0], [67200.0, 1.0], [68600.0, 1.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[600.0, 5.0], [700.0, 1.0], [1400.0, 3.0], [1600.0, 3.0], [800.0, 1.0], [1800.0, 1.0], [500.0, 5.0], [2000.0, 1.0]], "isOverall": false, "label": "https://nims-frontend.nemmadi.in/home", "isController": false}, {"data": [[100.0, 54.0], [200.0, 181.0], [300.0, 292.0], [400.0, 202.0], [500.0, 164.0], [600.0, 64.0], [700.0, 109.0], [800.0, 165.0], [900.0, 63.0], [1000.0, 52.0], [1100.0, 57.0], [1200.0, 101.0], [1300.0, 48.0], [1400.0, 72.0], [1500.0, 43.0], [1600.0, 46.0], [1700.0, 62.0], [1800.0, 93.0], [1900.0, 87.0], [2000.0, 53.0], [2100.0, 42.0], [2200.0, 31.0], [2300.0, 31.0], [2400.0, 24.0], [2500.0, 20.0], [2600.0, 10.0], [2700.0, 6.0], [2800.0, 10.0], [2900.0, 3.0], [3000.0, 9.0], [3100.0, 10.0], [3200.0, 22.0], [3300.0, 6.0], [3400.0, 15.0], [3500.0, 8.0], [3700.0, 14.0], [3600.0, 5.0], [3800.0, 24.0], [3900.0, 5.0], [4000.0, 4.0], [4200.0, 2.0], [4300.0, 1.0], [4100.0, 3.0], [4500.0, 9.0], [4400.0, 11.0], [4600.0, 5.0], [4700.0, 15.0], [4800.0, 21.0], [5100.0, 7.0], [4900.0, 16.0], [5000.0, 2.0], [5200.0, 3.0], [5300.0, 2.0], [5400.0, 7.0], [5500.0, 9.0], [5600.0, 1.0], [6300.0, 7.0], [6200.0, 1.0], [6400.0, 29.0], [6600.0, 25.0], [6500.0, 38.0], [6700.0, 1.0], [6800.0, 1.0], [7000.0, 2.0], [7100.0, 1.0], [7300.0, 1.0], [7200.0, 1.0], [7400.0, 1.0], [7900.0, 3.0], [7700.0, 1.0], [8300.0, 1.0], [8600.0, 18.0], [8700.0, 1.0], [8200.0, 2.0], [8400.0, 4.0], [8500.0, 1.0], [9200.0, 4.0], [9100.0, 2.0], [8800.0, 1.0], [9000.0, 2.0], [8900.0, 1.0], [9500.0, 3.0], [10000.0, 2.0], [10100.0, 1.0], [11300.0, 1.0], [11500.0, 1.0], [12000.0, 1.0], [12100.0, 2.0], [11900.0, 2.0], [11800.0, 1.0], [12300.0, 4.0], [12400.0, 2.0], [12500.0, 4.0], [12600.0, 3.0], [12800.0, 1.0], [13300.0, 4.0], [13200.0, 3.0], [13000.0, 5.0], [12900.0, 4.0], [13100.0, 2.0], [13400.0, 4.0], [14100.0, 1.0], [14800.0, 1.0], [15800.0, 1.0], [16000.0, 2.0], [16200.0, 1.0], [16300.0, 3.0], [16600.0, 2.0], [16900.0, 3.0], [16700.0, 5.0], [16500.0, 4.0], [16400.0, 3.0], [16800.0, 3.0], [17000.0, 14.0], [17100.0, 1.0], [17200.0, 1.0], [17400.0, 1.0], [17500.0, 2.0], [17600.0, 1.0], [19000.0, 2.0], [19200.0, 1.0], [19100.0, 1.0], [19700.0, 1.0], [20100.0, 2.0], [19900.0, 1.0], [19800.0, 3.0], [20000.0, 1.0], [20300.0, 3.0], [20600.0, 2.0], [20800.0, 1.0], [20500.0, 3.0], [20700.0, 1.0], [21500.0, 3.0], [21300.0, 4.0], [21000.0, 1.0], [21100.0, 2.0], [21600.0, 10.0], [21700.0, 8.0], [22700.0, 1.0], [23200.0, 4.0], [23100.0, 4.0], [23300.0, 2.0], [23400.0, 1.0], [23500.0, 1.0], [23800.0, 2.0], [23600.0, 1.0], [24400.0, 1.0], [25800.0, 1.0], [25900.0, 1.0], [26700.0, 1.0], [27700.0, 1.0]], "isOverall": false, "label": "https://nims-backend.nemmadi.in/graphql/", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 70900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1136.0, "series": [{"data": [[0.0, 731.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 970.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1136.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 3.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7023791E12, "maxY": 20.0, "series": [{"data": [[1.7023791E12, 19.689826302729525], [1.70237916E12, 7.929824561403504]], "isOverall": false, "label": "Login&CreateUser", "isController": false}, {"data": [[1.7023791E12, 17.82500000000001]], "isOverall": false, "label": "Create-project", "isController": false}, {"data": [[1.7023791E12, 19.970976253298158], [1.70237916E12, 16.565982404692093]], "isOverall": false, "label": "All Nav", "isController": false}, {"data": [[1.7023791E12, 20.0], [1.70237916E12, 12.7029702970297]], "isOverall": false, "label": "Mobile AllNav", "isController": false}, {"data": [[1.7023791E12, 19.938888888888894], [1.70237916E12, 9.599999999999996]], "isOverall": false, "label": "Mobile-Snag", "isController": false}, {"data": [[1.7023791E12, 17.69127516778524], [1.70237916E12, 1.0]], "isOverall": false, "label": "Mobile ENGlog", "isController": false}, {"data": [[1.7023791E12, 17.986666666666657]], "isOverall": false, "label": "Mobile-INSlog", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70237916E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 151.33333333333334, "minX": 1.0, "maxY": 70939.0, "series": [{"data": [[140.0, 1282.8999999999996]], "isOverall": false, "label": "https://nims-mobile.nemmadi.in/dashboard", "isController": false}, {"data": [[140.0, 1282.8999999999996]], "isOverall": false, "label": "https://nims-mobile.nemmadi.in/dashboard-Aggregated", "isController": false}, {"data": [[2.0, 68612.0], [3.0, 67579.0], [4.0, 67235.0], [5.0, 67879.0], [6.0, 67533.0], [7.0, 66315.0], [8.0, 63125.0], [10.0, 64673.5], [12.0, 64921.0], [14.0, 63060.5], [17.0, 63337.666666666664], [18.0, 64075.0], [19.0, 63413.0], [20.0, 60286.0], [21.0, 62936.0], [22.0, 59360.0], [25.0, 58495.0], [26.0, 59402.333333333336], [27.0, 59961.0], [28.0, 60156.0], [29.0, 59903.0], [33.0, 56806.0], [32.0, 57896.0], [34.0, 56981.0], [36.0, 56314.5], [38.0, 56399.5], [43.0, 55592.0], [42.0, 56080.0], [44.0, 55457.0], [49.0, 56457.0], [51.0, 56010.0], [53.0, 54137.0], [52.0, 57511.0], [55.0, 56055.0], [57.0, 55390.0], [56.0, 55774.0], [58.0, 55591.0], [61.0, 56612.0], [60.0, 54961.5], [67.0, 55025.0], [66.0, 56813.0], [70.0, 54642.0], [68.0, 55423.0], [75.0, 56001.0], [74.0, 55855.5], [72.0, 53918.0], [79.0, 54092.0], [78.0, 54495.0], [77.0, 53991.0], [76.0, 53789.0], [82.0, 49479.0], [81.0, 51558.0], [80.0, 51325.0], [87.0, 49612.0], [86.0, 47878.0], [85.0, 49279.0], [84.0, 50625.5], [91.0, 49497.0], [90.0, 48510.0], [89.0, 49915.0], [88.0, 50186.0], [95.0, 44974.0], [94.0, 44665.0], [93.0, 46490.0], [92.0, 47293.0], [99.0, 45316.0], [98.0, 43469.0], [97.0, 43728.0], [102.0, 44761.0], [101.0, 45915.0], [100.0, 43486.0], [107.0, 44171.0], [105.0, 44440.0], [104.0, 44945.5], [110.0, 45934.0], [109.0, 45054.5], [115.0, 43536.2], [119.0, 42393.5], [117.0, 43623.0], [123.0, 43849.0], [121.0, 43339.0], [126.0, 42257.5], [124.0, 43399.5], [134.0, 40228.0], [133.0, 43238.0], [131.0, 41704.0], [129.0, 42413.5], [140.0, 40869.0], [139.0, 41781.5], [137.0, 43378.0], [136.0, 43529.0], [1.0, 70939.0]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[71.10714285714283, 52589.19285714287]], "isOverall": false, "label": "Test-Aggregated", "isController": true}, {"data": [[140.0, 1030.0]], "isOverall": false, "label": "https://nims-frontend.nemmadi.in/home", "isController": false}, {"data": [[140.0, 1030.0]], "isOverall": false, "label": "https://nims-frontend.nemmadi.in/home-Aggregated", "isController": false}, {"data": [[2.0, 676.6], [3.0, 151.33333333333334], [4.0, 162.5], [5.0, 335.0], [6.0, 310.1111111111111], [7.0, 750.6923076923077], [8.0, 2186.0], [10.0, 563.5555555555555], [12.0, 1228.7], [14.0, 869.8333333333334], [17.0, 414.4285714285714], [18.0, 966.2857142857143], [19.0, 920.047619047619], [20.0, 723.3333333333333], [21.0, 298.75], [22.0, 2473.823529411765], [25.0, 1466.3333333333333], [26.0, 1422.1199999999997], [27.0, 755.5], [28.0, 971.2258064516129], [29.0, 775.3333333333334], [33.0, 560.1304347826086], [32.0, 938.3333333333334], [34.0, 606.5], [37.0, 513.0], [36.0, 513.5], [38.0, 746.4166666666667], [43.0, 944.4375000000001], [42.0, 480.6], [44.0, 233.52941176470586], [49.0, 561.4509803921568], [51.0, 645.5416666666667], [50.0, 300.2], [53.0, 495.5], [52.0, 477.6], [55.0, 427.0], [57.0, 1377.3333333333333], [56.0, 368.3333333333333], [58.0, 464.3333333333333], [61.0, 393.3333333333333], [60.0, 493.8], [65.0, 1604.25], [67.0, 752.8571428571429], [66.0, 299.0], [70.0, 1215.0], [69.0, 1235.0], [68.0, 1237.2], [75.0, 2473.0], [74.0, 1811.6666666666667], [73.0, 1227.0], [72.0, 1229.8749999999998], [79.0, 3007.227272727272], [78.0, 2387.8888888888887], [77.0, 3976.5], [76.0, 2339.25], [82.0, 1879.5454545454545], [81.0, 1895.8095238095236], [80.0, 1777.3488372093022], [87.0, 915.6666666666666], [86.0, 831.4], [85.0, 814.9999999999999], [84.0, 1799.8181818181818], [91.0, 3791.2000000000007], [90.0, 3551.3333333333335], [89.0, 3495.6], [88.0, 3443.8399999999997], [95.0, 1622.25], [94.0, 1389.0], [93.0, 1532.3333333333333], [92.0, 3424.1851851851848], [99.0, 1001.5], [98.0, 1026.0], [97.0, 1259.8823529411766], [102.0, 1223.2], [101.0, 1853.0], [100.0, 844.375], [107.0, 568.2777777777779], [106.0, 352.0], [105.0, 1881.086956521739], [104.0, 1891.8500000000001], [110.0, 852.0], [109.0, 1251.7692307692307], [108.0, 356.4], [115.0, 765.0625], [119.0, 939.5813953488372], [118.0, 287.6666666666667], [117.0, 331.1428571428571], [123.0, 1503.7142857142858], [122.0, 1517.6666666666665], [121.0, 1646.9333333333334], [126.0, 1858.125], [124.0, 1532.6875], [135.0, 2155.428571428571], [134.0, 2068.241379310344], [133.0, 1950.9642857142853], [131.0, 1875.5652173913047], [130.0, 1795.0], [129.0, 1805.111111111111], [128.0, 2038.0], [140.0, 3711.158904109585], [139.0, 888.4090909090909], [138.0, 803.2857142857143], [137.0, 2263.8695652173906], [136.0, 2203.6666666666665], [1.0, 326.0]], "isOverall": false, "label": "https://nims-backend.nemmadi.in/graphql/", "isController": false}, {"data": [[111.50218978102193, 2642.0635036496333]], "isOverall": false, "label": "https://nims-backend.nemmadi.in/graphql/-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 140.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8725.933333333332, "minX": 1.7023791E12, "maxY": 41403.76666666667, "series": [{"data": [[1.7023791E12, 41403.76666666667], [1.70237916E12, 8725.933333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7023791E12, 39286.76666666667], [1.70237916E12, 9776.9]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70237916E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 815.1341222879685, "minX": 1.7023791E12, "maxY": 58867.20270270269, "series": [{"data": [[1.7023791E12, 1282.8999999999996]], "isOverall": false, "label": "https://nims-mobile.nemmadi.in/dashboard", "isController": false}, {"data": [[1.7023791E12, 45550.21212121211], [1.70237916E12, 58867.20270270269]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.7023791E12, 1030.0]], "isOverall": false, "label": "https://nims-frontend.nemmadi.in/home", "isController": false}, {"data": [[1.7023791E12, 3056.865651589792], [1.70237916E12, 815.1341222879685]], "isOverall": false, "label": "https://nims-backend.nemmadi.in/graphql/", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70237916E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 815.1104536489152, "minX": 1.7023791E12, "maxY": 58866.391891891886, "series": [{"data": [[1.7023791E12, 1282.1874999999998]], "isOverall": false, "label": "https://nims-mobile.nemmadi.in/dashboard", "isController": false}, {"data": [[1.7023791E12, 45548.68181818181], [1.70237916E12, 58866.391891891886]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.7023791E12, 1029.95]], "isOverall": false, "label": "https://nims-frontend.nemmadi.in/home", "isController": false}, {"data": [[1.7023791E12, 3056.825347066719], [1.70237916E12, 815.1104536489152]], "isOverall": false, "label": "https://nims-backend.nemmadi.in/graphql/", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70237916E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 31.563367666815793, "minX": 1.7023791E12, "maxY": 1349.9324324324325, "series": [{"data": [[1.7023791E12, 849.1749999999998]], "isOverall": false, "label": "https://nims-mobile.nemmadi.in/dashboard", "isController": false}, {"data": [[1.7023791E12, 1036.8636363636365], [1.70237916E12, 1349.9324324324325]], "isOverall": false, "label": "Test", "isController": true}, {"data": [[1.7023791E12, 650.6]], "isOverall": false, "label": "https://nims-frontend.nemmadi.in/home", "isController": false}, {"data": [[1.7023791E12, 31.563367666815793], [1.70237916E12, 33.33530571992111]], "isOverall": false, "label": "https://nims-backend.nemmadi.in/graphql/", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70237916E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 136.0, "minX": 1.7023791E12, "maxY": 27772.0, "series": [{"data": [[1.7023791E12, 27772.0], [1.70237916E12, 12478.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7023791E12, 143.0], [1.70237916E12, 136.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7023791E12, 6615.0], [1.70237916E12, 1296.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7023791E12, 21734.07], [1.70237916E12, 7729.40000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7023791E12, 1437.0], [1.70237916E12, 534.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7023791E12, 16062.999999999993], [1.70237916E12, 1505.999999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70237916E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 160.0, "minX": 1.0, "maxY": 20523.5, "series": [{"data": [[2.0, 7331.0], [32.0, 1834.0], [35.0, 2721.0], [41.0, 2690.0], [45.0, 328.0], [3.0, 1841.0], [54.0, 1548.0], [4.0, 634.0], [69.0, 515.0], [73.0, 505.0], [76.0, 1727.0], [79.0, 525.0], [5.0, 886.0], [91.0, 784.0], [90.0, 3420.5], [99.0, 450.0], [101.0, 851.0], [105.0, 17072.0], [113.0, 1235.0], [123.0, 6503.0], [133.0, 578.0], [8.0, 1474.0], [140.0, 1008.0], [137.0, 1997.0], [155.0, 409.0], [10.0, 10236.0], [11.0, 593.0], [12.0, 20523.5], [231.0, 479.0], [1.0, 8363.0], [261.0, 415.0], [17.0, 828.0], [18.0, 160.0], [21.0, 1295.0], [23.0, 8256.5], [24.0, 16709.5], [26.0, 2424.0], [27.0, 3276.0], [28.0, 3247.0], [29.0, 1438.0], [30.0, 844.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[133.0, 179.0], [261.0, 200.0], [76.0, 1884.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 261.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 160.0, "minX": 1.0, "maxY": 20523.5, "series": [{"data": [[2.0, 7331.0], [32.0, 1834.0], [35.0, 2721.0], [41.0, 2690.0], [45.0, 328.0], [3.0, 1841.0], [54.0, 1548.0], [4.0, 634.0], [69.0, 515.0], [73.0, 505.0], [76.0, 1727.0], [79.0, 525.0], [5.0, 886.0], [91.0, 784.0], [90.0, 3420.5], [99.0, 450.0], [101.0, 851.0], [105.0, 17072.0], [113.0, 1235.0], [123.0, 6503.0], [133.0, 578.0], [8.0, 1474.0], [140.0, 1007.5], [137.0, 1997.0], [155.0, 409.0], [10.0, 10236.0], [11.0, 593.0], [12.0, 20523.5], [231.0, 479.0], [1.0, 8363.0], [261.0, 415.0], [17.0, 828.0], [18.0, 160.0], [21.0, 1295.0], [23.0, 8256.5], [24.0, 16709.5], [26.0, 2424.0], [27.0, 3276.0], [28.0, 3247.0], [29.0, 1438.0], [30.0, 844.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[133.0, 179.0], [261.0, 200.0], [76.0, 1884.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 261.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 7.216666666666667, "minX": 1.7023791E12, "maxY": 40.11666666666667, "series": [{"data": [[1.7023791E12, 40.11666666666667], [1.70237916E12, 7.216666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70237916E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.7023791E12, "maxY": 38.833333333333336, "series": [{"data": [[1.7023791E12, 38.833333333333336], [1.70237916E12, 8.45]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7023791E12, 0.05]], "isOverall": false, "label": "503", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70237916E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.7023791E12, "maxY": 37.166666666666664, "series": [{"data": [[1.7023791E12, 1.3333333333333333]], "isOverall": false, "label": "https://nims-mobile.nemmadi.in/dashboard-success", "isController": false}, {"data": [[1.7023791E12, 37.166666666666664], [1.70237916E12, 8.45]], "isOverall": false, "label": "https://nims-backend.nemmadi.in/graphql/-success", "isController": false}, {"data": [[1.7023791E12, 1.0666666666666667], [1.70237916E12, 1.2166666666666666]], "isOverall": false, "label": "Test-success", "isController": true}, {"data": [[1.7023791E12, 0.3333333333333333]], "isOverall": false, "label": "https://nims-frontend.nemmadi.in/home-success", "isController": false}, {"data": [[1.7023791E12, 0.05]], "isOverall": false, "label": "https://nims-backend.nemmadi.in/graphql/-failure", "isController": false}, {"data": [[1.7023791E12, 0.03333333333333333], [1.70237916E12, 0.016666666666666666]], "isOverall": false, "label": "Test-failure", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70237916E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.7023791E12, "maxY": 39.9, "series": [{"data": [[1.7023791E12, 39.9], [1.70237916E12, 9.666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7023791E12, 0.08333333333333333], [1.70237916E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70237916E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 19800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

